
ota_boot_atmega328.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00007df2  00000e66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000df2  00007000  00007000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  008001a4  00007e96  00000f0a  2**0
                  ALLOC
  3 .stab         0000294c  00000000  00000000  00000f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001f6c  00000000  00000000  00003858  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00007000 <__c.1770>:
    7000:	45 46 47 65 66 67 00                                EFGefg.

00007007 <__c.1764>:
    7007:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.
	...

00007018 <__ctors_end>:
    7018:	11 e0       	ldi	r17, 0x01	; 1
    701a:	a0 e0       	ldi	r26, 0x00	; 0
    701c:	b1 e0       	ldi	r27, 0x01	; 1
    701e:	e2 ef       	ldi	r30, 0xF2	; 242
    7020:	fd e7       	ldi	r31, 0x7D	; 125
    7022:	02 c0       	rjmp	.+4      	; 0x7028 <.do_copy_data_start>

00007024 <.do_copy_data_loop>:
    7024:	05 90       	lpm	r0, Z+
    7026:	0d 92       	st	X+, r0

00007028 <.do_copy_data_start>:
    7028:	a4 3a       	cpi	r26, 0xA4	; 164
    702a:	b1 07       	cpc	r27, r17
    702c:	d9 f7       	brne	.-10     	; 0x7024 <.do_copy_data_loop>

0000702e <__do_clear_bss>:
    702e:	12 e0       	ldi	r17, 0x02	; 2
    7030:	a4 ea       	ldi	r26, 0xA4	; 164
    7032:	b1 e0       	ldi	r27, 0x01	; 1
    7034:	01 c0       	rjmp	.+2      	; 0x7038 <.do_clear_bss_start>

00007036 <.do_clear_bss_loop>:
    7036:	1d 92       	st	X+, r1

00007038 <.do_clear_bss_start>:
    7038:	a2 32       	cpi	r26, 0x22	; 34
    703a:	b1 07       	cpc	r27, r17
    703c:	e1 f7       	brne	.-8      	; 0x7036 <.do_clear_bss_loop>

0000703e <main>:
    703e:	11 24       	eor	r1, r1
    7040:	24 b7       	in	r18, 0x34	; 52
    7042:	14 be       	out	0x34, r1	; 52
    7044:	98 e1       	ldi	r25, 0x18	; 24
    7046:	0f b6       	in	r0, 0x3f	; 63
    7048:	f8 94       	cli
    704a:	90 93 60 00 	sts	0x0060, r25
    704e:	10 92 60 00 	sts	0x0060, r1
    7052:	0f be       	out	0x3f, r0	; 63
    7054:	82 e0       	ldi	r24, 0x02	; 2
    7056:	80 93 c0 00 	sts	0x00C0, r24
    705a:	90 93 c1 00 	sts	0x00C1, r25
    705e:	86 e0       	ldi	r24, 0x06	; 6
    7060:	80 93 c2 00 	sts	0x00C2, r24
    7064:	88 e0       	ldi	r24, 0x08	; 8
    7066:	80 93 c4 00 	sts	0x00C4, r24
    706a:	21 fd       	sbrc	r18, 1
    706c:	0e c0       	rjmp	.+28     	; 0x708a <main+0x4c>
    706e:	85 e3       	ldi	r24, 0x35	; 53
    7070:	91 e0       	ldi	r25, 0x01	; 1
    7072:	c7 d2       	rcall	.+1422   	; 0x7602 <P>
    7074:	e0 e0       	ldi	r30, 0x00	; 0
    7076:	f0 e0       	ldi	r31, 0x00	; 0
    7078:	80 e8       	ldi	r24, 0x80	; 128
    707a:	0f b6       	in	r0, 0x3f	; 63
    707c:	f8 94       	cli
    707e:	80 93 61 00 	sts	0x0061, r24
    7082:	e0 93 61 00 	sts	0x0061, r30
    7086:	0f be       	out	0x3f, r0	; 63
    7088:	09 95       	icall
    708a:	82 e0       	ldi	r24, 0x02	; 2
    708c:	90 e0       	ldi	r25, 0x00	; 0
    708e:	20 e8       	ldi	r18, 0x80	; 128
    7090:	0f b6       	in	r0, 0x3f	; 63
    7092:	f8 94       	cli
    7094:	20 93 61 00 	sts	0x0061, r18
    7098:	80 93 61 00 	sts	0x0061, r24
    709c:	0f be       	out	0x3f, r0	; 63
    709e:	8f e3       	ldi	r24, 0x3F	; 63
    70a0:	91 e0       	ldi	r25, 0x01	; 1
    70a2:	af d2       	rcall	.+1374   	; 0x7602 <P>
    70a4:	88 e4       	ldi	r24, 0x48	; 72
    70a6:	91 e0       	ldi	r25, 0x01	; 1
    70a8:	ac d2       	rcall	.+1368   	; 0x7602 <P>
    70aa:	8d b7       	in	r24, 0x3d	; 61
    70ac:	9e b7       	in	r25, 0x3e	; 62
    70ae:	c9 d2       	rcall	.+1426   	; 0x7642 <P_X16>
    70b0:	8a e0       	ldi	r24, 0x0A	; 10
    70b2:	9f d2       	rcall	.+1342   	; 0x75f2 <putch>
    70b4:	0f e2       	ldi	r16, 0x2F	; 47
    70b6:	20 2e       	mov	r2, r16
    70b8:	31 2c       	mov	r3, r1
    70ba:	2c 0e       	add	r2, r28
    70bc:	3d 1e       	adc	r3, r29
    70be:	19 e2       	ldi	r17, 0x29	; 41
    70c0:	81 2e       	mov	r8, r17
    70c2:	91 2c       	mov	r9, r1
    70c4:	8c 0e       	add	r8, r28
    70c6:	9d 1e       	adc	r9, r29
    70c8:	b5 e1       	ldi	r27, 0x15	; 21
    70ca:	ab 2e       	mov	r10, r27
    70cc:	b1 2c       	mov	r11, r1
    70ce:	ac 0e       	add	r10, r28
    70d0:	bd 1e       	adc	r11, r29
    70d2:	a9 e1       	ldi	r26, 0x19	; 25
    70d4:	6a 2e       	mov	r6, r26
    70d6:	71 2c       	mov	r7, r1
    70d8:	6c 0e       	add	r6, r28
    70da:	7d 1e       	adc	r7, r29
    70dc:	2e 01       	movw	r4, r28
    70de:	08 94       	sec
    70e0:	41 1c       	adc	r4, r1
    70e2:	51 1c       	adc	r5, r1
    70e4:	a2 e0       	ldi	r26, 0x02	; 2
    70e6:	b2 e0       	ldi	r27, 0x02	; 2
    70e8:	e0 ec       	ldi	r30, 0xC0	; 192
    70ea:	ff e0       	ldi	r31, 0x0F	; 15
    70ec:	80 e2       	ldi	r24, 0x20	; 32
    70ee:	01 90       	ld	r0, Z+
    70f0:	0d 92       	st	X+, r0
    70f2:	81 50       	subi	r24, 0x01	; 1
    70f4:	e1 f7       	brne	.-8      	; 0x70ee <main+0xb0>
    70f6:	82 e0       	ldi	r24, 0x02	; 2
    70f8:	92 e0       	ldi	r25, 0x02	; 2
    70fa:	60 e2       	ldi	r22, 0x20	; 32
    70fc:	70 e0       	ldi	r23, 0x00	; 0
    70fe:	92 d4       	rcall	.+2340   	; 0x7a24 <calcCRC>
    7100:	89 2b       	or	r24, r25
    7102:	31 f0       	breq	.+12     	; 0x7110 <main+0xd2>
    7104:	80 e2       	ldi	r24, 0x20	; 32
    7106:	e2 e0       	ldi	r30, 0x02	; 2
    7108:	f2 e0       	ldi	r31, 0x02	; 2
    710a:	11 92       	st	Z+, r1
    710c:	8a 95       	dec	r24
    710e:	e9 f7       	brne	.-6      	; 0x710a <main+0xcc>
    7110:	81 e0       	ldi	r24, 0x01	; 1
    7112:	63 e0       	ldi	r22, 0x03	; 3
    7114:	44 ed       	ldi	r20, 0xD4	; 212
    7116:	0b d4       	rcall	.+2070   	; 0x792e <rf12_initialize>
    7118:	8c e4       	ldi	r24, 0x4C	; 76
    711a:	91 e0       	ldi	r25, 0x01	; 1
    711c:	72 d2       	rcall	.+1252   	; 0x7602 <P>
    711e:	10 92 a8 01 	sts	0x01A8, r1
    7122:	00 e0       	ldi	r16, 0x00	; 0
    7124:	11 e0       	ldi	r17, 0x01	; 1
    7126:	1a a7       	std	Y+42, r17	; 0x2a
    7128:	09 a7       	std	Y+41, r16	; 0x29
    712a:	80 91 06 02 	lds	r24, 0x0206
    712e:	8b a7       	std	Y+43, r24	; 0x2b
    7130:	80 91 07 02 	lds	r24, 0x0207
    7134:	8c a7       	std	Y+44, r24	; 0x2c
    7136:	8a e0       	ldi	r24, 0x0A	; 10
    7138:	92 e0       	ldi	r25, 0x02	; 2
    713a:	60 e1       	ldi	r22, 0x10	; 16
    713c:	70 e0       	ldi	r23, 0x00	; 0
    713e:	72 d4       	rcall	.+2276   	; 0x7a24 <calcCRC>
    7140:	9e a7       	std	Y+46, r25	; 0x2e
    7142:	8d a7       	std	Y+45, r24	; 0x2d
    7144:	d1 01       	movw	r26, r2
    7146:	e9 ea       	ldi	r30, 0xA9	; 169
    7148:	f1 e0       	ldi	r31, 0x01	; 1
    714a:	80 e1       	ldi	r24, 0x10	; 16
    714c:	01 90       	ld	r0, Z+
    714e:	0d 92       	st	X+, r0
    7150:	81 50       	subi	r24, 0x01	; 1
    7152:	e1 f7       	brne	.-8      	; 0x714c <main+0x10e>
    7154:	88 e5       	ldi	r24, 0x58	; 88
    7156:	91 e0       	ldi	r25, 0x01	; 1
    7158:	54 d2       	rcall	.+1192   	; 0x7602 <P>
    715a:	89 ea       	ldi	r24, 0xA9	; 169
    715c:	91 e0       	ldi	r25, 0x01	; 1
    715e:	60 e1       	ldi	r22, 0x10	; 16
    7160:	7b d2       	rcall	.+1270   	; 0x7658 <P_A>
    7162:	c4 01       	movw	r24, r8
    7164:	66 e1       	ldi	r22, 0x16	; 22
    7166:	70 e0       	ldi	r23, 0x00	; 0
    7168:	40 e4       	ldi	r20, 0x40	; 64
    716a:	50 e0       	ldi	r21, 0x00	; 0
    716c:	24 d5       	rcall	.+2632   	; 0x7bb6 <sendRequest>
    716e:	18 16       	cp	r1, r24
    7170:	19 06       	cpc	r1, r25
    7172:	0c f0       	brlt	.+2      	; 0x7176 <main+0x138>
    7174:	5d c0       	rjmp	.+186    	; 0x7230 <main+0x1f2>
    7176:	80 91 bb 01 	lds	r24, 0x01BB
    717a:	84 31       	cpi	r24, 0x14	; 20
    717c:	09 f0       	breq	.+2      	; 0x7180 <main+0x142>
    717e:	58 c0       	rjmp	.+176    	; 0x7230 <main+0x1f2>
    7180:	8e e5       	ldi	r24, 0x5E	; 94
    7182:	91 e0       	ldi	r25, 0x01	; 1
    7184:	3e d2       	rcall	.+1148   	; 0x7602 <P>
    7186:	c4 01       	movw	r24, r8
    7188:	66 e1       	ldi	r22, 0x16	; 22
    718a:	66 d2       	rcall	.+1228   	; 0x7658 <P_A>
    718c:	82 e6       	ldi	r24, 0x62	; 98
    718e:	91 e0       	ldi	r25, 0x01	; 1
    7190:	38 d2       	rcall	.+1136   	; 0x7602 <P>
    7192:	8c eb       	ldi	r24, 0xBC	; 188
    7194:	91 e0       	ldi	r25, 0x01	; 1
    7196:	64 e1       	ldi	r22, 0x14	; 20
    7198:	5f d2       	rcall	.+1214   	; 0x7658 <P_A>
    719a:	86 e6       	ldi	r24, 0x66	; 102
    719c:	91 e0       	ldi	r25, 0x01	; 1
    719e:	31 d2       	rcall	.+1122   	; 0x7602 <P>
    71a0:	c5 01       	movw	r24, r10
    71a2:	64 e1       	ldi	r22, 0x14	; 20
    71a4:	59 d2       	rcall	.+1202   	; 0x7658 <P_A>
    71a6:	d5 01       	movw	r26, r10
    71a8:	ec eb       	ldi	r30, 0xBC	; 188
    71aa:	f1 e0       	ldi	r31, 0x01	; 1
    71ac:	84 e1       	ldi	r24, 0x14	; 20
    71ae:	01 90       	ld	r0, Z+
    71b0:	0d 92       	st	X+, r0
    71b2:	81 50       	subi	r24, 0x01	; 1
    71b4:	e1 f7       	brne	.-8      	; 0x71ae <main+0x170>
    71b6:	86 e6       	ldi	r24, 0x66	; 102
    71b8:	91 e0       	ldi	r25, 0x01	; 1
    71ba:	23 d2       	rcall	.+1094   	; 0x7602 <P>
    71bc:	c5 01       	movw	r24, r10
    71be:	64 e1       	ldi	r22, 0x14	; 20
    71c0:	4b d2       	rcall	.+1174   	; 0x7658 <P_A>
    71c2:	8a e6       	ldi	r24, 0x6A	; 106
    71c4:	91 e0       	ldi	r25, 0x01	; 1
    71c6:	1d d2       	rcall	.+1082   	; 0x7602 <P>
    71c8:	8f 89       	ldd	r24, Y+23	; 0x17
    71ca:	27 d2       	rcall	.+1102   	; 0x761a <P_X8>
    71cc:	8d e6       	ldi	r24, 0x6D	; 109
    71ce:	91 e0       	ldi	r25, 0x01	; 1
    71d0:	18 d2       	rcall	.+1072   	; 0x7602 <P>
    71d2:	88 8d       	ldd	r24, Y+24	; 0x18
    71d4:	22 d2       	rcall	.+1092   	; 0x761a <P_X8>
    71d6:	8a e0       	ldi	r24, 0x0A	; 10
    71d8:	0c d2       	rcall	.+1048   	; 0x75f2 <putch>
    71da:	8f 89       	ldd	r24, Y+23	; 0x17
    71dc:	80 93 06 02 	sts	0x0206, r24
    71e0:	88 8d       	ldd	r24, Y+24	; 0x18
    71e2:	80 93 07 02 	sts	0x0207, r24
    71e6:	82 e0       	ldi	r24, 0x02	; 2
    71e8:	92 e0       	ldi	r25, 0x02	; 2
    71ea:	60 e2       	ldi	r22, 0x20	; 32
    71ec:	35 d2       	rcall	.+1130   	; 0x7658 <P_A>
    71ee:	aa e0       	ldi	r26, 0x0A	; 10
    71f0:	b2 e0       	ldi	r27, 0x02	; 2
    71f2:	f3 01       	movw	r30, r6
    71f4:	80 e1       	ldi	r24, 0x10	; 16
    71f6:	01 90       	ld	r0, Z+
    71f8:	0d 92       	st	X+, r0
    71fa:	81 50       	subi	r24, 0x01	; 1
    71fc:	e1 f7       	brne	.-8      	; 0x71f6 <main+0x1b8>
    71fe:	3b d4       	rcall	.+2166   	; 0x7a76 <saveConfig>
    7200:	82 e7       	ldi	r24, 0x72	; 114
    7202:	91 e0       	ldi	r25, 0x01	; 1
    7204:	fe d1       	rcall	.+1020   	; 0x7602 <P>
    7206:	80 91 07 02 	lds	r24, 0x0207
    720a:	07 d2       	rcall	.+1038   	; 0x761a <P_X8>
    720c:	80 e1       	ldi	r24, 0x10	; 16
    720e:	91 e0       	ldi	r25, 0x01	; 1
    7210:	f8 d1       	rcall	.+1008   	; 0x7602 <P>
    7212:	80 91 06 02 	lds	r24, 0x0206
    7216:	01 d2       	rcall	.+1026   	; 0x761a <P_X8>
    7218:	8d e7       	ldi	r24, 0x7D	; 125
    721a:	91 e0       	ldi	r25, 0x01	; 1
    721c:	f2 d1       	rcall	.+996    	; 0x7602 <P>
    721e:	82 e0       	ldi	r24, 0x02	; 2
    7220:	92 e0       	ldi	r25, 0x02	; 2
    7222:	0f d2       	rcall	.+1054   	; 0x7642 <P_X16>
    7224:	8a e0       	ldi	r24, 0x0A	; 10
    7226:	e5 d1       	rcall	.+970    	; 0x75f2 <putch>
    7228:	82 e0       	ldi	r24, 0x02	; 2
    722a:	92 e0       	ldi	r25, 0x02	; 2
    722c:	60 e2       	ldi	r22, 0x20	; 32
    722e:	14 d2       	rcall	.+1064   	; 0x7658 <P_A>
    7230:	40 91 06 02 	lds	r20, 0x0206
    7234:	44 23       	and	r20, r20
    7236:	21 f0       	breq	.+8      	; 0x7240 <main+0x202>
    7238:	80 91 07 02 	lds	r24, 0x0207
    723c:	88 23       	and	r24, r24
    723e:	11 f4       	brne	.+4      	; 0x7244 <main+0x206>
    7240:	37 d4       	rcall	.+2158   	; 0x7ab0 <exponentialBackOff>
    7242:	71 cf       	rjmp	.-286    	; 0x7126 <main+0xe8>
    7244:	63 e0       	ldi	r22, 0x03	; 3
    7246:	73 d3       	rcall	.+1766   	; 0x792e <rf12_initialize>
    7248:	86 e8       	ldi	r24, 0x86	; 134
    724a:	91 e0       	ldi	r25, 0x01	; 1
    724c:	da d1       	rcall	.+948    	; 0x7602 <P>
    724e:	10 92 a8 01 	sts	0x01A8, r1
    7252:	e1 2c       	mov	r14, r1
    7254:	f1 e0       	ldi	r31, 0x01	; 1
    7256:	ff 2e       	mov	r15, r31
    7258:	8e 01       	movw	r16, r28
    725a:	0b 5f       	subi	r16, 0xFB	; 251
    725c:	1f 4f       	sbci	r17, 0xFF	; 255
    725e:	fe 82       	std	Y+6, r15	; 0x06
    7260:	ed 82       	std	Y+5, r14	; 0x05
    7262:	80 91 1a 02 	lds	r24, 0x021A
    7266:	90 91 1b 02 	lds	r25, 0x021B
    726a:	98 87       	std	Y+8, r25	; 0x08
    726c:	8f 83       	std	Y+7, r24	; 0x07
    726e:	80 91 1c 02 	lds	r24, 0x021C
    7272:	90 91 1d 02 	lds	r25, 0x021D
    7276:	9a 87       	std	Y+10, r25	; 0x0a
    7278:	89 87       	std	Y+9, r24	; 0x09
    727a:	80 91 1e 02 	lds	r24, 0x021E
    727e:	90 91 1f 02 	lds	r25, 0x021F
    7282:	9c 87       	std	Y+12, r25	; 0x0c
    7284:	8b 87       	std	Y+11, r24	; 0x0b
    7286:	c8 01       	movw	r24, r16
    7288:	68 e0       	ldi	r22, 0x08	; 8
    728a:	70 e0       	ldi	r23, 0x00	; 0
    728c:	40 e0       	ldi	r20, 0x00	; 0
    728e:	50 e0       	ldi	r21, 0x00	; 0
    7290:	92 d4       	rcall	.+2340   	; 0x7bb6 <sendRequest>
    7292:	18 16       	cp	r1, r24
    7294:	19 06       	cpc	r1, r25
    7296:	04 f5       	brge	.+64     	; 0x72d8 <main+0x29a>
    7298:	80 91 bb 01 	lds	r24, 0x01BB
    729c:	88 30       	cpi	r24, 0x08	; 8
    729e:	e1 f4       	brne	.+56     	; 0x72d8 <main+0x29a>
    72a0:	de 01       	movw	r26, r28
    72a2:	1d 96       	adiw	r26, 0x0d	; 13
    72a4:	ec eb       	ldi	r30, 0xBC	; 188
    72a6:	f1 e0       	ldi	r31, 0x01	; 1
    72a8:	01 90       	ld	r0, Z+
    72aa:	0d 92       	st	X+, r0
    72ac:	81 50       	subi	r24, 0x01	; 1
    72ae:	e1 f7       	brne	.-8      	; 0x72a8 <main+0x26a>
    72b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    72b2:	98 89       	ldd	r25, Y+16	; 0x10
    72b4:	90 93 1b 02 	sts	0x021B, r25
    72b8:	80 93 1a 02 	sts	0x021A, r24
    72bc:	89 89       	ldd	r24, Y+17	; 0x11
    72be:	9a 89       	ldd	r25, Y+18	; 0x12
    72c0:	90 93 1d 02 	sts	0x021D, r25
    72c4:	80 93 1c 02 	sts	0x021C, r24
    72c8:	8b 89       	ldd	r24, Y+19	; 0x13
    72ca:	9c 89       	ldd	r25, Y+20	; 0x14
    72cc:	90 93 1f 02 	sts	0x021F, r25
    72d0:	80 93 1e 02 	sts	0x021E, r24
    72d4:	d0 d3       	rcall	.+1952   	; 0x7a76 <saveConfig>
    72d6:	05 c0       	rjmp	.+10     	; 0x72e2 <main+0x2a4>
    72d8:	eb d3       	rcall	.+2006   	; 0x7ab0 <exponentialBackOff>
    72da:	f2 d3       	rcall	.+2020   	; 0x7ac0 <appIsValid>
    72dc:	89 2b       	or	r24, r25
    72de:	09 f4       	brne	.+2      	; 0x72e2 <main+0x2a4>
    72e0:	be cf       	rjmp	.-132    	; 0x725e <main+0x220>
    72e2:	86 e9       	ldi	r24, 0x96	; 150
    72e4:	91 e0       	ldi	r25, 0x01	; 1
    72e6:	8d d1       	rcall	.+794    	; 0x7602 <P>
    72e8:	eb d3       	rcall	.+2006   	; 0x7ac0 <appIsValid>
    72ea:	89 2b       	or	r24, r25
    72ec:	09 f0       	breq	.+2      	; 0x72f0 <main+0x2b2>
    72ee:	4e c0       	rjmp	.+156    	; 0x738c <main+0x34e>
    72f0:	00 91 1c 02 	lds	r16, 0x021C
    72f4:	10 91 1d 02 	lds	r17, 0x021D
    72f8:	e4 e0       	ldi	r30, 0x04	; 4
    72fa:	00 0f       	add	r16, r16
    72fc:	11 1f       	adc	r17, r17
    72fe:	ea 95       	dec	r30
    7300:	e1 f7       	brne	.-8      	; 0x72fa <main+0x2bc>
    7302:	01 5c       	subi	r16, 0xC1	; 193
    7304:	1f 4f       	sbci	r17, 0xFF	; 255
    7306:	76 e0       	ldi	r23, 0x06	; 6
    7308:	16 95       	lsr	r17
    730a:	07 95       	ror	r16
    730c:	7a 95       	dec	r23
    730e:	e1 f7       	brne	.-8      	; 0x7308 <main+0x2ca>
    7310:	ee 24       	eor	r14, r14
    7312:	ff 24       	eor	r15, r15
    7314:	6f e3       	ldi	r22, 0x3F	; 63
    7316:	c6 2e       	mov	r12, r22
    7318:	d1 2c       	mov	r13, r1
    731a:	cc 0e       	add	r12, r28
    731c:	dd 1e       	adc	r13, r29
    731e:	33 c0       	rjmp	.+102    	; 0x7386 <main+0x348>
    7320:	10 92 a8 01 	sts	0x01A8, r1
    7324:	80 91 1a 02 	lds	r24, 0x021A
    7328:	90 91 1b 02 	lds	r25, 0x021B
    732c:	9a 83       	std	Y+2, r25	; 0x02
    732e:	89 83       	std	Y+1, r24	; 0x01
    7330:	fc 82       	std	Y+4, r15	; 0x04
    7332:	eb 82       	std	Y+3, r14	; 0x03
    7334:	c2 01       	movw	r24, r4
    7336:	64 e0       	ldi	r22, 0x04	; 4
    7338:	70 e0       	ldi	r23, 0x00	; 0
    733a:	40 e0       	ldi	r20, 0x00	; 0
    733c:	50 e0       	ldi	r21, 0x00	; 0
    733e:	3b d4       	rcall	.+2166   	; 0x7bb6 <sendRequest>
    7340:	18 16       	cp	r1, r24
    7342:	19 06       	cpc	r1, r25
    7344:	f4 f4       	brge	.+60     	; 0x7382 <main+0x344>
    7346:	80 91 bb 01 	lds	r24, 0x01BB
    734a:	82 34       	cpi	r24, 0x42	; 66
    734c:	d1 f4       	brne	.+52     	; 0x7382 <main+0x344>
    734e:	20 e0       	ldi	r18, 0x00	; 0
    7350:	30 e0       	ldi	r19, 0x00	; 0
    7352:	90 e0       	ldi	r25, 0x00	; 0
    7354:	f9 01       	movw	r30, r18
    7356:	e2 54       	subi	r30, 0x42	; 66
    7358:	fe 4f       	sbci	r31, 0xFE	; 254
    735a:	80 81       	ld	r24, Z
    735c:	89 27       	eor	r24, r25
    735e:	80 83       	st	Z, r24
    7360:	2f 5f       	subi	r18, 0xFF	; 255
    7362:	3f 4f       	sbci	r19, 0xFF	; 255
    7364:	9d 52       	subi	r25, 0x2D	; 45
    7366:	90 3c       	cpi	r25, 0xC0	; 192
    7368:	a9 f7       	brne	.-22     	; 0x7354 <main+0x316>
    736a:	d6 01       	movw	r26, r12
    736c:	ee eb       	ldi	r30, 0xBE	; 190
    736e:	f1 e0       	ldi	r31, 0x01	; 1
    7370:	80 e4       	ldi	r24, 0x40	; 64
    7372:	01 90       	ld	r0, Z+
    7374:	0d 92       	st	X+, r0
    7376:	81 50       	subi	r24, 0x01	; 1
    7378:	e1 f7       	brne	.-8      	; 0x7372 <main+0x334>
    737a:	08 94       	sec
    737c:	e1 1c       	adc	r14, r1
    737e:	f1 1c       	adc	r15, r1
    7380:	02 c0       	rjmp	.+4      	; 0x7386 <main+0x348>
    7382:	96 d3       	rcall	.+1836   	; 0x7ab0 <exponentialBackOff>
    7384:	cf cf       	rjmp	.-98     	; 0x7324 <main+0x2e6>
    7386:	e0 16       	cp	r14, r16
    7388:	f1 06       	cpc	r15, r17
    738a:	54 f2       	brlt	.-108    	; 0x7320 <main+0x2e2>
    738c:	99 d3       	rcall	.+1842   	; 0x7ac0 <appIsValid>
    738e:	89 2b       	or	r24, r25
    7390:	09 f4       	brne	.+2      	; 0x7394 <main+0x356>
    7392:	a8 ce       	rjmp	.-688    	; 0x70e4 <main+0xa6>
    7394:	80 e0       	ldi	r24, 0x00	; 0
    7396:	90 e0       	ldi	r25, 0x00	; 0
    7398:	20 e8       	ldi	r18, 0x80	; 128
    739a:	0f b6       	in	r0, 0x3f	; 63
    739c:	f8 94       	cli
    739e:	20 93 61 00 	sts	0x0061, r18
    73a2:	80 93 61 00 	sts	0x0061, r24
    73a6:	0f be       	out	0x3f, r0	; 63
    73a8:	28 e0       	ldi	r18, 0x08	; 8
    73aa:	88 e1       	ldi	r24, 0x18	; 24
    73ac:	90 e0       	ldi	r25, 0x00	; 0
    73ae:	0f b6       	in	r0, 0x3f	; 63
    73b0:	f8 94       	cli
    73b2:	a8 95       	wdr
    73b4:	80 93 60 00 	sts	0x0060, r24
    73b8:	0f be       	out	0x3f, r0	; 63
    73ba:	20 93 60 00 	sts	0x0060, r18
    73be:	ff cf       	rjmp	.-2      	; 0x73be <main+0x380>

000073c0 <vfprintf>:
    73c0:	ab e0       	ldi	r26, 0x0B	; 11
    73c2:	b0 e0       	ldi	r27, 0x00	; 0
    73c4:	e5 ee       	ldi	r30, 0xE5	; 229
    73c6:	f9 e3       	ldi	r31, 0x39	; 57
    73c8:	e1 c4       	rjmp	.+2498   	; 0x7d8c <__prologue_saves__+0x8>
    73ca:	5c 01       	movw	r10, r24
    73cc:	4b 01       	movw	r8, r22
    73ce:	7a 01       	movw	r14, r20
    73d0:	fc 01       	movw	r30, r24
    73d2:	17 82       	std	Z+7, r1	; 0x07
    73d4:	16 82       	std	Z+6, r1	; 0x06
    73d6:	83 81       	ldd	r24, Z+3	; 0x03
    73d8:	81 fd       	sbrc	r24, 1
    73da:	08 c0       	rjmp	.+16     	; 0x73ec <vfprintf+0x2c>
    73dc:	6f ef       	ldi	r22, 0xFF	; 255
    73de:	7f ef       	ldi	r23, 0xFF	; 255
    73e0:	fe c0       	rjmp	.+508    	; 0x75de <vfprintf+0x21e>
    73e2:	42 e0       	ldi	r20, 0x02	; 2
    73e4:	50 e0       	ldi	r21, 0x00	; 0
    73e6:	e4 0e       	add	r14, r20
    73e8:	f5 1e       	adc	r15, r21
    73ea:	04 c0       	rjmp	.+8      	; 0x73f4 <vfprintf+0x34>
    73ec:	3e 01       	movw	r6, r28
    73ee:	08 94       	sec
    73f0:	61 1c       	adc	r6, r1
    73f2:	71 1c       	adc	r7, r1
    73f4:	f5 01       	movw	r30, r10
    73f6:	d3 80       	ldd	r13, Z+3	; 0x03
    73f8:	f4 01       	movw	r30, r8
    73fa:	d3 fc       	sbrc	r13, 3
    73fc:	85 91       	lpm	r24, Z+
    73fe:	d3 fe       	sbrs	r13, 3
    7400:	81 91       	ld	r24, Z+
    7402:	4f 01       	movw	r8, r30
    7404:	88 23       	and	r24, r24
    7406:	09 f4       	brne	.+2      	; 0x740a <vfprintf+0x4a>
    7408:	e7 c0       	rjmp	.+462    	; 0x75d8 <vfprintf+0x218>
    740a:	85 32       	cpi	r24, 0x25	; 37
    740c:	59 f4       	brne	.+22     	; 0x7424 <vfprintf+0x64>
    740e:	d3 fc       	sbrc	r13, 3
    7410:	65 91       	lpm	r22, Z+
    7412:	d3 fe       	sbrs	r13, 3
    7414:	61 91       	ld	r22, Z+
    7416:	4f 01       	movw	r8, r30
    7418:	65 32       	cpi	r22, 0x25	; 37
    741a:	19 f0       	breq	.+6      	; 0x7422 <vfprintf+0x62>
    741c:	06 2f       	mov	r16, r22
    741e:	10 e0       	ldi	r17, 0x00	; 0
    7420:	1a c0       	rjmp	.+52     	; 0x7456 <vfprintf+0x96>
    7422:	85 e2       	ldi	r24, 0x25	; 37
    7424:	90 e0       	ldi	r25, 0x00	; 0
    7426:	29 c0       	rjmp	.+82     	; 0x747a <vfprintf+0xba>
    7428:	00 23       	and	r16, r16
    742a:	09 f4       	brne	.+2      	; 0x742e <vfprintf+0x6e>
    742c:	d5 c0       	rjmp	.+426    	; 0x75d8 <vfprintf+0x218>
    742e:	87 e0       	ldi	r24, 0x07	; 7
    7430:	90 e7       	ldi	r25, 0x70	; 112
    7432:	60 2f       	mov	r22, r16
    7434:	70 e0       	ldi	r23, 0x00	; 0
    7436:	08 d4       	rcall	.+2064   	; 0x7c48 <strchr_P>
    7438:	89 2b       	or	r24, r25
    743a:	39 f4       	brne	.+14     	; 0x744a <vfprintf+0x8a>
    743c:	03 32       	cpi	r16, 0x23	; 35
    743e:	11 f4       	brne	.+4      	; 0x7444 <vfprintf+0x84>
    7440:	10 61       	ori	r17, 0x10	; 16
    7442:	03 c0       	rjmp	.+6      	; 0x744a <vfprintf+0x8a>
    7444:	0c 36       	cpi	r16, 0x6C	; 108
    7446:	61 f4       	brne	.+24     	; 0x7460 <vfprintf+0xa0>
    7448:	10 68       	ori	r17, 0x80	; 128
    744a:	f4 01       	movw	r30, r8
    744c:	d3 fc       	sbrc	r13, 3
    744e:	05 91       	lpm	r16, Z+
    7450:	d3 fe       	sbrs	r13, 3
    7452:	01 91       	ld	r16, Z+
    7454:	4f 01       	movw	r8, r30
    7456:	17 ff       	sbrs	r17, 7
    7458:	e7 cf       	rjmp	.-50     	; 0x7428 <vfprintf+0x68>
    745a:	00 23       	and	r16, r16
    745c:	09 f4       	brne	.+2      	; 0x7460 <vfprintf+0xa0>
    745e:	bc c0       	rjmp	.+376    	; 0x75d8 <vfprintf+0x218>
    7460:	80 e0       	ldi	r24, 0x00	; 0
    7462:	90 e7       	ldi	r25, 0x70	; 112
    7464:	60 2f       	mov	r22, r16
    7466:	70 e0       	ldi	r23, 0x00	; 0
    7468:	ef d3       	rcall	.+2014   	; 0x7c48 <strchr_P>
    746a:	89 2b       	or	r24, r25
    746c:	49 f0       	breq	.+18     	; 0x7480 <vfprintf+0xc0>
    746e:	44 e0       	ldi	r20, 0x04	; 4
    7470:	50 e0       	ldi	r21, 0x00	; 0
    7472:	e4 0e       	add	r14, r20
    7474:	f5 1e       	adc	r15, r21
    7476:	8f e3       	ldi	r24, 0x3F	; 63
    7478:	90 e0       	ldi	r25, 0x00	; 0
    747a:	b5 01       	movw	r22, r10
    747c:	f9 d3       	rcall	.+2034   	; 0x7c70 <fputc>
    747e:	ba cf       	rjmp	.-140    	; 0x73f4 <vfprintf+0x34>
    7480:	03 36       	cpi	r16, 0x63	; 99
    7482:	29 f0       	breq	.+10     	; 0x748e <vfprintf+0xce>
    7484:	03 37       	cpi	r16, 0x73	; 115
    7486:	71 f0       	breq	.+28     	; 0x74a4 <vfprintf+0xe4>
    7488:	03 35       	cpi	r16, 0x53	; 83
    748a:	e1 f4       	brne	.+56     	; 0x74c4 <vfprintf+0x104>
    748c:	0a c0       	rjmp	.+20     	; 0x74a2 <vfprintf+0xe2>
    748e:	87 01       	movw	r16, r14
    7490:	0e 5f       	subi	r16, 0xFE	; 254
    7492:	1f 4f       	sbci	r17, 0xFF	; 255
    7494:	f7 01       	movw	r30, r14
    7496:	80 81       	ld	r24, Z
    7498:	91 81       	ldd	r25, Z+1	; 0x01
    749a:	b5 01       	movw	r22, r10
    749c:	e9 d3       	rcall	.+2002   	; 0x7c70 <fputc>
    749e:	78 01       	movw	r14, r16
    74a0:	a9 cf       	rjmp	.-174    	; 0x73f4 <vfprintf+0x34>
    74a2:	11 60       	ori	r17, 0x01	; 1
    74a4:	f7 01       	movw	r30, r14
    74a6:	c0 80       	ld	r12, Z
    74a8:	d1 80       	ldd	r13, Z+1	; 0x01
    74aa:	03 c0       	rjmp	.+6      	; 0x74b2 <vfprintf+0xf2>
    74ac:	90 e0       	ldi	r25, 0x00	; 0
    74ae:	b5 01       	movw	r22, r10
    74b0:	df d3       	rcall	.+1982   	; 0x7c70 <fputc>
    74b2:	f6 01       	movw	r30, r12
    74b4:	10 fd       	sbrc	r17, 0
    74b6:	85 91       	lpm	r24, Z+
    74b8:	10 ff       	sbrs	r17, 0
    74ba:	81 91       	ld	r24, Z+
    74bc:	6f 01       	movw	r12, r30
    74be:	88 23       	and	r24, r24
    74c0:	a9 f7       	brne	.-22     	; 0x74ac <vfprintf+0xec>
    74c2:	8f cf       	rjmp	.-226    	; 0x73e2 <vfprintf+0x22>
    74c4:	04 36       	cpi	r16, 0x64	; 100
    74c6:	11 f0       	breq	.+4      	; 0x74cc <vfprintf+0x10c>
    74c8:	09 36       	cpi	r16, 0x69	; 105
    74ca:	39 f5       	brne	.+78     	; 0x751a <vfprintf+0x15a>
    74cc:	17 ff       	sbrs	r17, 7
    74ce:	08 c0       	rjmp	.+16     	; 0x74e0 <vfprintf+0x120>
    74d0:	f7 01       	movw	r30, r14
    74d2:	20 81       	ld	r18, Z
    74d4:	31 81       	ldd	r19, Z+1	; 0x01
    74d6:	42 81       	ldd	r20, Z+2	; 0x02
    74d8:	53 81       	ldd	r21, Z+3	; 0x03
    74da:	84 e0       	ldi	r24, 0x04	; 4
    74dc:	90 e0       	ldi	r25, 0x00	; 0
    74de:	0a c0       	rjmp	.+20     	; 0x74f4 <vfprintf+0x134>
    74e0:	f7 01       	movw	r30, r14
    74e2:	80 81       	ld	r24, Z
    74e4:	91 81       	ldd	r25, Z+1	; 0x01
    74e6:	9c 01       	movw	r18, r24
    74e8:	44 27       	eor	r20, r20
    74ea:	37 fd       	sbrc	r19, 7
    74ec:	40 95       	com	r20
    74ee:	54 2f       	mov	r21, r20
    74f0:	82 e0       	ldi	r24, 0x02	; 2
    74f2:	90 e0       	ldi	r25, 0x00	; 0
    74f4:	e8 0e       	add	r14, r24
    74f6:	f9 1e       	adc	r15, r25
    74f8:	1f 7e       	andi	r17, 0xEF	; 239
    74fa:	57 ff       	sbrs	r21, 7
    74fc:	08 c0       	rjmp	.+16     	; 0x750e <vfprintf+0x14e>
    74fe:	50 95       	com	r21
    7500:	40 95       	com	r20
    7502:	30 95       	com	r19
    7504:	21 95       	neg	r18
    7506:	3f 4f       	sbci	r19, 0xFF	; 255
    7508:	4f 4f       	sbci	r20, 0xFF	; 255
    750a:	5f 4f       	sbci	r21, 0xFF	; 255
    750c:	10 64       	ori	r17, 0x40	; 64
    750e:	ca 01       	movw	r24, r20
    7510:	b9 01       	movw	r22, r18
    7512:	a3 01       	movw	r20, r6
    7514:	2a e0       	ldi	r18, 0x0A	; 10
    7516:	30 e0       	ldi	r19, 0x00	; 0
    7518:	34 c0       	rjmp	.+104    	; 0x7582 <vfprintf+0x1c2>
    751a:	00 37       	cpi	r16, 0x70	; 112
    751c:	a9 f0       	breq	.+42     	; 0x7548 <vfprintf+0x188>
    751e:	01 37       	cpi	r16, 0x71	; 113
    7520:	30 f4       	brcc	.+12     	; 0x752e <vfprintf+0x16e>
    7522:	08 35       	cpi	r16, 0x58	; 88
    7524:	b1 f0       	breq	.+44     	; 0x7552 <vfprintf+0x192>
    7526:	0f 36       	cpi	r16, 0x6F	; 111
    7528:	09 f0       	breq	.+2      	; 0x752c <vfprintf+0x16c>
    752a:	56 c0       	rjmp	.+172    	; 0x75d8 <vfprintf+0x218>
    752c:	06 c0       	rjmp	.+12     	; 0x753a <vfprintf+0x17a>
    752e:	05 37       	cpi	r16, 0x75	; 117
    7530:	39 f0       	breq	.+14     	; 0x7540 <vfprintf+0x180>
    7532:	08 37       	cpi	r16, 0x78	; 120
    7534:	09 f0       	breq	.+2      	; 0x7538 <vfprintf+0x178>
    7536:	50 c0       	rjmp	.+160    	; 0x75d8 <vfprintf+0x218>
    7538:	08 c0       	rjmp	.+16     	; 0x754a <vfprintf+0x18a>
    753a:	28 e0       	ldi	r18, 0x08	; 8
    753c:	30 e0       	ldi	r19, 0x00	; 0
    753e:	0c c0       	rjmp	.+24     	; 0x7558 <vfprintf+0x198>
    7540:	1f 7e       	andi	r17, 0xEF	; 239
    7542:	2a e0       	ldi	r18, 0x0A	; 10
    7544:	30 e0       	ldi	r19, 0x00	; 0
    7546:	08 c0       	rjmp	.+16     	; 0x7558 <vfprintf+0x198>
    7548:	10 61       	ori	r17, 0x10	; 16
    754a:	14 62       	ori	r17, 0x24	; 36
    754c:	20 e1       	ldi	r18, 0x10	; 16
    754e:	30 e0       	ldi	r19, 0x00	; 0
    7550:	03 c0       	rjmp	.+6      	; 0x7558 <vfprintf+0x198>
    7552:	14 60       	ori	r17, 0x04	; 4
    7554:	20 e1       	ldi	r18, 0x10	; 16
    7556:	32 e0       	ldi	r19, 0x02	; 2
    7558:	17 ff       	sbrs	r17, 7
    755a:	08 c0       	rjmp	.+16     	; 0x756c <vfprintf+0x1ac>
    755c:	f7 01       	movw	r30, r14
    755e:	60 81       	ld	r22, Z
    7560:	71 81       	ldd	r23, Z+1	; 0x01
    7562:	82 81       	ldd	r24, Z+2	; 0x02
    7564:	93 81       	ldd	r25, Z+3	; 0x03
    7566:	44 e0       	ldi	r20, 0x04	; 4
    7568:	50 e0       	ldi	r21, 0x00	; 0
    756a:	08 c0       	rjmp	.+16     	; 0x757c <vfprintf+0x1bc>
    756c:	f7 01       	movw	r30, r14
    756e:	80 81       	ld	r24, Z
    7570:	91 81       	ldd	r25, Z+1	; 0x01
    7572:	bc 01       	movw	r22, r24
    7574:	80 e0       	ldi	r24, 0x00	; 0
    7576:	90 e0       	ldi	r25, 0x00	; 0
    7578:	42 e0       	ldi	r20, 0x02	; 2
    757a:	50 e0       	ldi	r21, 0x00	; 0
    757c:	e4 0e       	add	r14, r20
    757e:	f5 1e       	adc	r15, r21
    7580:	a3 01       	movw	r20, r6
    7582:	a2 d3       	rcall	.+1860   	; 0x7cc8 <__ultoa_invert>
    7584:	d8 2e       	mov	r13, r24
    7586:	d6 18       	sub	r13, r6
    7588:	01 2f       	mov	r16, r17
    758a:	10 e0       	ldi	r17, 0x00	; 0
    758c:	06 ff       	sbrs	r16, 6
    758e:	04 c0       	rjmp	.+8      	; 0x7598 <vfprintf+0x1d8>
    7590:	8d e2       	ldi	r24, 0x2D	; 45
    7592:	90 e0       	ldi	r25, 0x00	; 0
    7594:	b5 01       	movw	r22, r10
    7596:	6c d3       	rcall	.+1752   	; 0x7c70 <fputc>
    7598:	04 ff       	sbrs	r16, 4
    759a:	13 c0       	rjmp	.+38     	; 0x75c2 <vfprintf+0x202>
    759c:	fe 01       	movw	r30, r28
    759e:	ed 0d       	add	r30, r13
    75a0:	f1 1d       	adc	r31, r1
    75a2:	80 81       	ld	r24, Z
    75a4:	80 33       	cpi	r24, 0x30	; 48
    75a6:	69 f0       	breq	.+26     	; 0x75c2 <vfprintf+0x202>
    75a8:	80 e3       	ldi	r24, 0x30	; 48
    75aa:	90 e0       	ldi	r25, 0x00	; 0
    75ac:	b5 01       	movw	r22, r10
    75ae:	60 d3       	rcall	.+1728   	; 0x7c70 <fputc>
    75b0:	02 ff       	sbrs	r16, 2
    75b2:	07 c0       	rjmp	.+14     	; 0x75c2 <vfprintf+0x202>
    75b4:	00 72       	andi	r16, 0x20	; 32
    75b6:	10 70       	andi	r17, 0x00	; 0
    75b8:	c8 01       	movw	r24, r16
    75ba:	88 5a       	subi	r24, 0xA8	; 168
    75bc:	9f 4f       	sbci	r25, 0xFF	; 255
    75be:	b5 01       	movw	r22, r10
    75c0:	57 d3       	rcall	.+1710   	; 0x7c70 <fputc>
    75c2:	da 94       	dec	r13
    75c4:	f3 01       	movw	r30, r6
    75c6:	ed 0d       	add	r30, r13
    75c8:	f1 1d       	adc	r31, r1
    75ca:	80 81       	ld	r24, Z
    75cc:	90 e0       	ldi	r25, 0x00	; 0
    75ce:	b5 01       	movw	r22, r10
    75d0:	4f d3       	rcall	.+1694   	; 0x7c70 <fputc>
    75d2:	dd 20       	and	r13, r13
    75d4:	b1 f7       	brne	.-20     	; 0x75c2 <vfprintf+0x202>
    75d6:	0e cf       	rjmp	.-484    	; 0x73f4 <vfprintf+0x34>
    75d8:	f5 01       	movw	r30, r10
    75da:	66 81       	ldd	r22, Z+6	; 0x06
    75dc:	77 81       	ldd	r23, Z+7	; 0x07
    75de:	cb 01       	movw	r24, r22
    75e0:	2b 96       	adiw	r28, 0x0b	; 11
    75e2:	ee e0       	ldi	r30, 0x0E	; 14
    75e4:	ef c3       	rjmp	.+2014   	; 0x7dc4 <__epilogue_restores__+0x8>

000075e6 <millis>:

uint32_t hwId [4];  

static uint32_t millis () {
  return 0; // FIXME not correct
}
    75e6:	60 e0       	ldi	r22, 0x00	; 0
    75e8:	70 e0       	ldi	r23, 0x00	; 0
    75ea:	80 e0       	ldi	r24, 0x00	; 0
    75ec:	90 e0       	ldi	r25, 0x00	; 0
    75ee:	08 95       	ret

000075f0 <sleep>:

static void sleep (word ms) {
  // ...
}
    75f0:	08 95       	ret

000075f2 <putch>:
#include "ota_RF12.h"
#include "boot.h"

/* The main function is in init9, which removes the interrupt vector table */
/* we don't need. It is also 'naked', which means the compiler does not    */
/* generate any entry or exit code itself. */
    75f2:	98 2f       	mov	r25, r24
int main(void) __attribute__ ((naked)) __attribute__ ((section (".init9")));
    75f4:	80 91 c0 00 	lds	r24, 0x00C0
    75f8:	85 ff       	sbrs	r24, 5
    75fa:	fc cf       	rjmp	.-8      	; 0x75f4 <putch+0x2>

    75fc:	90 93 c6 00 	sts	0x00C6, r25
int main () {
    7600:	08 95       	ret

00007602 <P>:
  // cli();
  asm volatile ("clr __zero_reg__");
    7602:	cf 93       	push	r28
    7604:	df 93       	push	r29
    7606:	ec 01       	movw	r28, r24
    7608:	02 c0       	rjmp	.+4      	; 0x760e <P+0xc>
  //SP=RAMEND;  // This is done by hardware reset
    760a:	21 96       	adiw	r28, 0x01	; 1
    760c:	f2 df       	rcall	.-28     	; 0x75f2 <putch>
    760e:	88 81       	ld	r24, Y
    7610:	88 23       	and	r24, r24
    7612:	d9 f7       	brne	.-10     	; 0x760a <P+0x8>

    7614:	df 91       	pop	r29
    7616:	cf 91       	pop	r28
    7618:	08 95       	ret

0000761a <P_X8>:
  // find out whether we got here through a watchdog reset
  byte launch = bitRead(MCUSR, EXTRF);
  MCUSR = 0;
  wdt_disable();
    761a:	1f 93       	push	r17
    761c:	18 2f       	mov	r17, r24

    761e:	82 95       	swap	r24
    7620:	8f 70       	andi	r24, 0x0F	; 15
#if DEBUG == 2
    7622:	8a 30       	cpi	r24, 0x0A	; 10
    7624:	10 f0       	brcs	.+4      	; 0x762a <P_X8+0x10>
    7626:	89 5a       	subi	r24, 0xA9	; 169
    7628:	01 c0       	rjmp	.+2      	; 0x762c <P_X8+0x12>
    762a:	80 5d       	subi	r24, 0xD0	; 208
    762c:	e2 df       	rcall	.-60     	; 0x75f2 <putch>
  // init UART
    762e:	81 2f       	mov	r24, r17
    7630:	8f 70       	andi	r24, 0x0F	; 15
  UART_SRA = _BV(U2X0); //Double speed mode USART0
    7632:	8a 30       	cpi	r24, 0x0A	; 10
    7634:	10 f0       	brcs	.+4      	; 0x763a <P_X8+0x20>
    7636:	89 5a       	subi	r24, 0xA9	; 169
    7638:	01 c0       	rjmp	.+2      	; 0x763c <P_X8+0x22>
    763a:	80 5d       	subi	r24, 0xD0	; 208
    763c:	da df       	rcall	.-76     	; 0x75f2 <putch>
  UART_SRB = _BV(RXEN0) | _BV(TXEN0);
    763e:	1f 91       	pop	r17
    7640:	08 95       	ret

00007642 <P_X16>:
  UART_SRC = _BV(UCSZ00) | _BV(UCSZ01);
  UART_SRL = (uint8_t)( (4000000L + BAUD_RATE * 4L) / (BAUD_RATE * 8L) - 1 );
    7642:	0f 93       	push	r16
    7644:	1f 93       	push	r17
    7646:	8c 01       	movw	r16, r24
#endif
    7648:	81 2f       	mov	r24, r17
    764a:	99 27       	eor	r25, r25
    764c:	e6 df       	rcall	.-52     	; 0x761a <P_X8>
#if DEBUG == 1
    764e:	80 2f       	mov	r24, r16
    7650:	e4 df       	rcall	.-56     	; 0x761a <P_X8>
  // Set up Timer 1 for timeout counter
    7652:	1f 91       	pop	r17
    7654:	0f 91       	pop	r16
    7656:	08 95       	ret

00007658 <P_A>:
  TCCR1B = _BV(CS12) | _BV(CS10); // div 1024
  // Set LED pin as output
  LED_DDR |= _BV(LED);
#endif
    7658:	1f 93       	push	r17
    765a:	cf 93       	push	r28
    765c:	df 93       	push	r29
    765e:	16 2f       	mov	r17, r22

    7660:	ec 01       	movw	r28, r24
  // similar to Adaboot no-wait mod
    7662:	ef df       	rcall	.-34     	; 0x7642 <P_X16>
  if (!launch) {
    7664:	80 e0       	ldi	r24, 0x00	; 0
    7666:	91 e0       	ldi	r25, 0x01	; 1
    7668:	cc df       	rcall	.-104    	; 0x7602 <P>
    766a:	05 c0       	rjmp	.+10     	; 0x7676 <P_A+0x1e>
    flash_led(12); // 6 flashes
		P("\n\nReset!\n");
    766c:	89 91       	ld	r24, Y+
    766e:	d5 df       	rcall	.-86     	; 0x761a <P_X8>
    7670:	80 e2       	ldi	r24, 0x20	; 32
    7672:	bf df       	rcall	.-130    	; 0x75f2 <putch>
    7674:	11 50       	subi	r17, 0x01	; 1
  LED_DDR |= _BV(LED);
#endif

  // similar to Adaboot no-wait mod
  if (!launch) {
    flash_led(12); // 6 flashes
    7676:	11 23       	and	r17, r17
    7678:	c9 f7       	brne	.-14     	; 0x766c <P_A+0x14>
  // cli();
  asm volatile ("clr __zero_reg__");
  //SP=RAMEND;  // This is done by hardware reset

  // find out whether we got here through a watchdog reset
  byte launch = bitRead(MCUSR, EXTRF);
    767a:	8a e0       	ldi	r24, 0x0A	; 10
    767c:	ba df       	rcall	.-140    	; 0x75f2 <putch>
  if (!launch) {
    flash_led(12); // 6 flashes
		P("\n\nReset!\n");
    clock_prescale_set(clock_div_1);
    ((void(*)()) 0)(); // Jump to RST vector
  }
    767e:	df 91       	pop	r29
    7680:	cf 91       	pop	r28
    7682:	1f 91       	pop	r17
    7684:	08 95       	ret

00007686 <rf12_byte>:
    7686:	8e bd       	out	0x2e, r24	; 46
    7688:	0d b4       	in	r0, 0x2d	; 45
    768a:	07 fe       	sbrs	r0, 7
    768c:	fd cf       	rjmp	.-6      	; 0x7688 <rf12_byte+0x2>
    768e:	8e b5       	in	r24, 0x2e	; 46
    7690:	08 95       	ret

00007692 <rf12_xfer>:
    7692:	ef 92       	push	r14
    7694:	ff 92       	push	r15
    7696:	0f 93       	push	r16
    7698:	1f 93       	push	r17
    769a:	7c 01       	movw	r14, r24
    769c:	2a 98       	cbi	0x05, 2	; 5
    769e:	89 2f       	mov	r24, r25
    76a0:	99 27       	eor	r25, r25
    76a2:	f1 df       	rcall	.-30     	; 0x7686 <rf12_byte>
    76a4:	08 2f       	mov	r16, r24
    76a6:	10 e0       	ldi	r17, 0x00	; 0
    76a8:	10 2f       	mov	r17, r16
    76aa:	00 27       	eor	r16, r16
    76ac:	8e 2d       	mov	r24, r14
    76ae:	eb df       	rcall	.-42     	; 0x7686 <rf12_byte>
    76b0:	2a 9a       	sbi	0x05, 2	; 5
    76b2:	90 e0       	ldi	r25, 0x00	; 0
    76b4:	80 2b       	or	r24, r16
    76b6:	91 2b       	or	r25, r17
    76b8:	1f 91       	pop	r17
    76ba:	0f 91       	pop	r16
    76bc:	ff 90       	pop	r15
    76be:	ef 90       	pop	r14
    76c0:	08 95       	ret

000076c2 <rf12_recvDone>:
    76c2:	89 b1       	in	r24, 0x09	; 9
    76c4:	86 95       	lsr	r24
    76c6:	86 95       	lsr	r24
    76c8:	80 fd       	sbrc	r24, 0
    76ca:	c0 c0       	rjmp	.+384    	; 0x784c <rf12_recvDone+0x18a>
    76cc:	80 e0       	ldi	r24, 0x00	; 0
    76ce:	90 e0       	ldi	r25, 0x00	; 0
    76d0:	e0 df       	rcall	.-64     	; 0x7692 <rf12_xfer>
    76d2:	80 91 a7 01 	lds	r24, 0x01A7
    76d6:	85 30       	cpi	r24, 0x05	; 5
    76d8:	09 f0       	breq	.+2      	; 0x76dc <rf12_recvDone+0x1a>
    76da:	51 c0       	rjmp	.+162    	; 0x777e <rf12_recvDone+0xbc>
    76dc:	80 e0       	ldi	r24, 0x00	; 0
    76de:	90 eb       	ldi	r25, 0xB0	; 176
    76e0:	d8 df       	rcall	.-80     	; 0x7692 <rf12_xfer>
    76e2:	28 2f       	mov	r18, r24
    76e4:	80 91 a6 01 	lds	r24, 0x01A6
    76e8:	88 23       	and	r24, r24
    76ea:	71 f4       	brne	.+28     	; 0x7708 <rf12_recvDone+0x46>
    76ec:	90 91 a5 01 	lds	r25, 0x01A5
    76f0:	99 23       	and	r25, r25
    76f2:	51 f0       	breq	.+20     	; 0x7708 <rf12_recvDone+0x46>
    76f4:	80 91 a6 01 	lds	r24, 0x01A6
    76f8:	e8 2f       	mov	r30, r24
    76fa:	f0 e0       	ldi	r31, 0x00	; 0
    76fc:	e7 54       	subi	r30, 0x47	; 71
    76fe:	fe 4f       	sbci	r31, 0xFE	; 254
    7700:	90 83       	st	Z, r25
    7702:	8f 5f       	subi	r24, 0xFF	; 255
    7704:	80 93 a6 01 	sts	0x01A6, r24
    7708:	80 91 a6 01 	lds	r24, 0x01A6
    770c:	e8 2f       	mov	r30, r24
    770e:	f0 e0       	ldi	r31, 0x00	; 0
    7710:	e7 54       	subi	r30, 0x47	; 71
    7712:	fe 4f       	sbci	r31, 0xFE	; 254
    7714:	20 83       	st	Z, r18
    7716:	8f 5f       	subi	r24, 0xFF	; 255
    7718:	80 93 a6 01 	sts	0x01A6, r24
    771c:	80 91 00 02 	lds	r24, 0x0200
    7720:	90 91 01 02 	lds	r25, 0x0201
_crc16_update(uint16_t __crc, uint8_t __data)
{
	uint8_t __tmp;
	uint16_t __ret;

	__asm__ __volatile__ (
    7724:	82 27       	eor	r24, r18
    7726:	28 2f       	mov	r18, r24
    7728:	22 95       	swap	r18
    772a:	28 27       	eor	r18, r24
    772c:	02 2e       	mov	r0, r18
    772e:	26 95       	lsr	r18
    7730:	26 95       	lsr	r18
    7732:	20 25       	eor	r18, r0
    7734:	02 2e       	mov	r0, r18
    7736:	26 95       	lsr	r18
    7738:	20 25       	eor	r18, r0
    773a:	27 70       	andi	r18, 0x07	; 7
    773c:	08 2e       	mov	r0, r24
    773e:	89 2f       	mov	r24, r25
    7740:	26 95       	lsr	r18
    7742:	07 94       	ror	r0
    7744:	27 95       	ror	r18
    7746:	90 2d       	mov	r25, r0
    7748:	82 27       	eor	r24, r18
    774a:	06 94       	lsr	r0
    774c:	27 95       	ror	r18
    774e:	90 25       	eor	r25, r0
    7750:	82 27       	eor	r24, r18
    7752:	90 93 01 02 	sts	0x0201, r25
    7756:	80 93 00 02 	sts	0x0200, r24
    775a:	80 91 bb 01 	lds	r24, 0x01BB
    775e:	20 91 a6 01 	lds	r18, 0x01A6
    7762:	90 e0       	ldi	r25, 0x00	; 0
    7764:	04 96       	adiw	r24, 0x04	; 4
    7766:	30 e0       	ldi	r19, 0x00	; 0
    7768:	82 17       	cp	r24, r18
    776a:	93 07       	cpc	r25, r19
    776c:	2c f0       	brlt	.+10     	; 0x7778 <rf12_recvDone+0xb6>
    776e:	80 91 a6 01 	lds	r24, 0x01A6
    7772:	87 34       	cpi	r24, 0x47	; 71
    7774:	08 f4       	brcc	.+2      	; 0x7778 <rf12_recvDone+0xb6>
    7776:	6a c0       	rjmp	.+212    	; 0x784c <rf12_recvDone+0x18a>
    7778:	8d e0       	ldi	r24, 0x0D	; 13
    777a:	92 e8       	ldi	r25, 0x82	; 130
    777c:	66 c0       	rjmp	.+204    	; 0x784a <rf12_recvDone+0x188>
    777e:	80 91 a7 01 	lds	r24, 0x01A7
    7782:	87 ff       	sbrs	r24, 7
    7784:	2e c0       	rjmp	.+92     	; 0x77e2 <rf12_recvDone+0x120>
    7786:	e0 91 bb 01 	lds	r30, 0x01BB
    778a:	80 91 a7 01 	lds	r24, 0x01A7
    778e:	8f 5f       	subi	r24, 0xFF	; 255
    7790:	80 93 a7 01 	sts	0x01A7, r24
    7794:	81 50       	subi	r24, 0x01	; 1
    7796:	ed 5f       	subi	r30, 0xFD	; 253
    7798:	e8 0f       	add	r30, r24
    779a:	f0 e0       	ldi	r31, 0x00	; 0
    779c:	e7 54       	subi	r30, 0x47	; 71
    779e:	fe 4f       	sbci	r31, 0xFE	; 254
    77a0:	e0 81       	ld	r30, Z
    77a2:	80 91 00 02 	lds	r24, 0x0200
    77a6:	90 91 01 02 	lds	r25, 0x0201
    77aa:	8e 27       	eor	r24, r30
    77ac:	28 2f       	mov	r18, r24
    77ae:	22 95       	swap	r18
    77b0:	28 27       	eor	r18, r24
    77b2:	02 2e       	mov	r0, r18
    77b4:	26 95       	lsr	r18
    77b6:	26 95       	lsr	r18
    77b8:	20 25       	eor	r18, r0
    77ba:	02 2e       	mov	r0, r18
    77bc:	26 95       	lsr	r18
    77be:	20 25       	eor	r18, r0
    77c0:	27 70       	andi	r18, 0x07	; 7
    77c2:	08 2e       	mov	r0, r24
    77c4:	89 2f       	mov	r24, r25
    77c6:	26 95       	lsr	r18
    77c8:	07 94       	ror	r0
    77ca:	27 95       	ror	r18
    77cc:	90 2d       	mov	r25, r0
    77ce:	82 27       	eor	r24, r18
    77d0:	06 94       	lsr	r0
    77d2:	27 95       	ror	r18
    77d4:	90 25       	eor	r25, r0
    77d6:	82 27       	eor	r24, r18
    77d8:	90 93 01 02 	sts	0x0201, r25
    77dc:	80 93 00 02 	sts	0x0200, r24
    77e0:	30 c0       	rjmp	.+96     	; 0x7842 <rf12_recvDone+0x180>
    77e2:	80 91 a7 01 	lds	r24, 0x01A7
    77e6:	8f 5f       	subi	r24, 0xFF	; 255
    77e8:	80 93 a7 01 	sts	0x01A7, r24
    77ec:	81 50       	subi	r24, 0x01	; 1
    77ee:	83 30       	cpi	r24, 0x03	; 3
    77f0:	21 f1       	breq	.+72     	; 0x783a <rf12_recvDone+0x178>
    77f2:	84 30       	cpi	r24, 0x04	; 4
    77f4:	2c f4       	brge	.+10     	; 0x7800 <rf12_recvDone+0x13e>
    77f6:	88 23       	and	r24, r24
    77f8:	99 f0       	breq	.+38     	; 0x7820 <rf12_recvDone+0x15e>
    77fa:	81 30       	cpi	r24, 0x01	; 1
    77fc:	09 f5       	brne	.+66     	; 0x7840 <rf12_recvDone+0x17e>
    77fe:	15 c0       	rjmp	.+42     	; 0x782a <rf12_recvDone+0x168>
    7800:	89 30       	cpi	r24, 0x09	; 9
    7802:	19 f0       	breq	.+6      	; 0x780a <rf12_recvDone+0x148>
    7804:	8a 30       	cpi	r24, 0x0A	; 10
    7806:	e1 f4       	brne	.+56     	; 0x7840 <rf12_recvDone+0x17e>
    7808:	02 c0       	rjmp	.+4      	; 0x780e <rf12_recvDone+0x14c>
    780a:	ed e2       	ldi	r30, 0x2D	; 45
    780c:	1a c0       	rjmp	.+52     	; 0x7842 <rf12_recvDone+0x180>
    780e:	e0 91 b9 01 	lds	r30, 0x01B9
    7812:	90 91 bb 01 	lds	r25, 0x01BB
    7816:	8e ef       	ldi	r24, 0xFE	; 254
    7818:	89 1b       	sub	r24, r25
    781a:	80 93 a7 01 	sts	0x01A7, r24
    781e:	11 c0       	rjmp	.+34     	; 0x7842 <rf12_recvDone+0x180>
    7820:	80 91 00 02 	lds	r24, 0x0200
    7824:	90 91 01 02 	lds	r25, 0x0201
    7828:	06 c0       	rjmp	.+12     	; 0x7836 <rf12_recvDone+0x174>
    782a:	80 91 00 02 	lds	r24, 0x0200
    782e:	90 91 01 02 	lds	r25, 0x0201
    7832:	89 2f       	mov	r24, r25
    7834:	99 27       	eor	r25, r25
    7836:	e8 2f       	mov	r30, r24
    7838:	04 c0       	rjmp	.+8      	; 0x7842 <rf12_recvDone+0x180>
    783a:	8d e0       	ldi	r24, 0x0D	; 13
    783c:	92 e8       	ldi	r25, 0x82	; 130
    783e:	29 df       	rcall	.-430    	; 0x7692 <rf12_xfer>
    7840:	ea ea       	ldi	r30, 0xAA	; 170
    7842:	8e 2f       	mov	r24, r30
    7844:	90 e0       	ldi	r25, 0x00	; 0
    7846:	80 50       	subi	r24, 0x00	; 0
    7848:	98 44       	sbci	r25, 0x48	; 72
    784a:	23 df       	rcall	.-442    	; 0x7692 <rf12_xfer>
    784c:	80 91 a7 01 	lds	r24, 0x01A7
    7850:	85 30       	cpi	r24, 0x05	; 5
    7852:	99 f5       	brne	.+102    	; 0x78ba <rf12_recvDone+0x1f8>
    7854:	80 91 bb 01 	lds	r24, 0x01BB
    7858:	20 91 a6 01 	lds	r18, 0x01A6
    785c:	90 e0       	ldi	r25, 0x00	; 0
    785e:	04 96       	adiw	r24, 0x04	; 4
    7860:	30 e0       	ldi	r19, 0x00	; 0
    7862:	82 17       	cp	r24, r18
    7864:	93 07       	cpc	r25, r19
    7866:	24 f0       	brlt	.+8      	; 0x7870 <rf12_recvDone+0x1ae>
    7868:	80 91 a6 01 	lds	r24, 0x01A6
    786c:	87 34       	cpi	r24, 0x47	; 71
    786e:	28 f1       	brcs	.+74     	; 0x78ba <rf12_recvDone+0x1f8>
    7870:	84 e0       	ldi	r24, 0x04	; 4
    7872:	80 93 a7 01 	sts	0x01A7, r24
    7876:	80 91 bb 01 	lds	r24, 0x01BB
    787a:	83 34       	cpi	r24, 0x43	; 67
    787c:	30 f0       	brcs	.+12     	; 0x788a <rf12_recvDone+0x1c8>
    787e:	81 e0       	ldi	r24, 0x01	; 1
    7880:	90 e0       	ldi	r25, 0x00	; 0
    7882:	90 93 01 02 	sts	0x0201, r25
    7886:	80 93 00 02 	sts	0x0200, r24
    788a:	80 91 ba 01 	lds	r24, 0x01BA
    788e:	86 ff       	sbrs	r24, 6
    7890:	4c c0       	rjmp	.+152    	; 0x792a <rf12_recvDone+0x268>
    7892:	80 91 a4 01 	lds	r24, 0x01A4
    7896:	28 2f       	mov	r18, r24
    7898:	30 e0       	ldi	r19, 0x00	; 0
    789a:	c9 01       	movw	r24, r18
    789c:	8f 71       	andi	r24, 0x1F	; 31
    789e:	90 70       	andi	r25, 0x00	; 0
    78a0:	4f 97       	sbiw	r24, 0x1f	; 31
    78a2:	09 f4       	brne	.+2      	; 0x78a6 <rf12_recvDone+0x1e4>
    78a4:	42 c0       	rjmp	.+132    	; 0x792a <rf12_recvDone+0x268>
    78a6:	80 91 ba 01 	lds	r24, 0x01BA
    78aa:	90 e0       	ldi	r25, 0x00	; 0
    78ac:	82 27       	eor	r24, r18
    78ae:	93 27       	eor	r25, r19
    78b0:	8f 71       	andi	r24, 0x1F	; 31
    78b2:	90 70       	andi	r25, 0x00	; 0
    78b4:	89 2b       	or	r24, r25
    78b6:	09 f4       	brne	.+2      	; 0x78ba <rf12_recvDone+0x1f8>
    78b8:	38 c0       	rjmp	.+112    	; 0x792a <rf12_recvDone+0x268>
    78ba:	80 91 a7 01 	lds	r24, 0x01A7
    78be:	84 30       	cpi	r24, 0x04	; 4
    78c0:	09 f0       	breq	.+2      	; 0x78c4 <rf12_recvDone+0x202>
    78c2:	31 c0       	rjmp	.+98     	; 0x7926 <rf12_recvDone+0x264>
    78c4:	10 92 bb 01 	sts	0x01BB, r1
    78c8:	80 91 bb 01 	lds	r24, 0x01BB
    78cc:	80 93 a6 01 	sts	0x01A6, r24
    78d0:	8f ef       	ldi	r24, 0xFF	; 255
    78d2:	9f ef       	ldi	r25, 0xFF	; 255
    78d4:	90 93 01 02 	sts	0x0201, r25
    78d8:	80 93 00 02 	sts	0x0200, r24
    78dc:	20 91 a5 01 	lds	r18, 0x01A5
    78e0:	22 23       	and	r18, r18
    78e2:	d9 f0       	breq	.+54     	; 0x791a <rf12_recvDone+0x258>
    78e4:	82 27       	eor	r24, r18
    78e6:	28 2f       	mov	r18, r24
    78e8:	22 95       	swap	r18
    78ea:	28 27       	eor	r18, r24
    78ec:	02 2e       	mov	r0, r18
    78ee:	26 95       	lsr	r18
    78f0:	26 95       	lsr	r18
    78f2:	20 25       	eor	r18, r0
    78f4:	02 2e       	mov	r0, r18
    78f6:	26 95       	lsr	r18
    78f8:	20 25       	eor	r18, r0
    78fa:	27 70       	andi	r18, 0x07	; 7
    78fc:	08 2e       	mov	r0, r24
    78fe:	89 2f       	mov	r24, r25
    7900:	26 95       	lsr	r18
    7902:	07 94       	ror	r0
    7904:	27 95       	ror	r18
    7906:	90 2d       	mov	r25, r0
    7908:	82 27       	eor	r24, r18
    790a:	06 94       	lsr	r0
    790c:	27 95       	ror	r18
    790e:	90 25       	eor	r25, r0
    7910:	82 27       	eor	r24, r18
    7912:	90 93 01 02 	sts	0x0201, r25
    7916:	80 93 00 02 	sts	0x0200, r24
    791a:	85 e0       	ldi	r24, 0x05	; 5
    791c:	80 93 a7 01 	sts	0x01A7, r24
    7920:	8d ed       	ldi	r24, 0xDD	; 221
    7922:	92 e8       	ldi	r25, 0x82	; 130
    7924:	b6 de       	rcall	.-660    	; 0x7692 <rf12_xfer>
    7926:	80 e0       	ldi	r24, 0x00	; 0
    7928:	08 95       	ret
    792a:	81 e0       	ldi	r24, 0x01	; 1
    792c:	08 95       	ret

0000792e <rf12_initialize>:
    792e:	ff 92       	push	r15
    7930:	0f 93       	push	r16
    7932:	1f 93       	push	r17
    7934:	18 2f       	mov	r17, r24
    7936:	f6 2e       	mov	r15, r22
    7938:	04 2f       	mov	r16, r20
    793a:	80 93 a4 01 	sts	0x01A4, r24
    793e:	40 93 a5 01 	sts	0x01A5, r20
    7942:	83 e0       	ldi	r24, 0x03	; 3
    7944:	91 e0       	ldi	r25, 0x01	; 1
    7946:	5d de       	rcall	.-838    	; 0x7602 <P>
    7948:	81 2f       	mov	r24, r17
    794a:	67 de       	rcall	.-818    	; 0x761a <P_X8>
    794c:	8c e0       	ldi	r24, 0x0C	; 12
    794e:	91 e0       	ldi	r25, 0x01	; 1
    7950:	58 de       	rcall	.-848    	; 0x7602 <P>
    7952:	8f 2d       	mov	r24, r15
    7954:	62 de       	rcall	.-828    	; 0x761a <P_X8>
    7956:	80 e1       	ldi	r24, 0x10	; 16
    7958:	91 e0       	ldi	r25, 0x01	; 1
    795a:	53 de       	rcall	.-858    	; 0x7602 <P>
    795c:	80 2f       	mov	r24, r16
    795e:	5d de       	rcall	.-838    	; 0x761a <P_X8>
  // cli();
  asm volatile ("clr __zero_reg__");
  //SP=RAMEND;  // This is done by hardware reset

  // find out whether we got here through a watchdog reset
  byte launch = bitRead(MCUSR, EXTRF);
    7960:	8a e0       	ldi	r24, 0x0A	; 10
    7962:	47 de       	rcall	.-882    	; 0x75f2 <putch>
    7964:	2a 9a       	sbi	0x05, 2	; 5
    7966:	22 9a       	sbi	0x04, 2	; 4
    7968:	22 9a       	sbi	0x04, 2	; 4
    796a:	84 b1       	in	r24, 0x04	; 4
    796c:	8c 63       	ori	r24, 0x3C	; 60
    796e:	84 b9       	out	0x04, r24	; 4
    7970:	81 e5       	ldi	r24, 0x51	; 81
    7972:	8c bd       	out	0x2c, r24	; 44
    7974:	8d b5       	in	r24, 0x2d	; 45
    7976:	81 60       	ori	r24, 0x01	; 1
    7978:	8d bd       	out	0x2d, r24	; 45
    797a:	52 98       	cbi	0x0a, 2	; 10
    797c:	5a 9a       	sbi	0x0b, 2	; 11
    797e:	80 e0       	ldi	r24, 0x00	; 0
    7980:	90 e0       	ldi	r25, 0x00	; 0
    7982:	87 de       	rcall	.-754    	; 0x7692 <rf12_xfer>
    7984:	85 e0       	ldi	r24, 0x05	; 5
    7986:	92 e8       	ldi	r25, 0x82	; 130
    7988:	84 de       	rcall	.-760    	; 0x7692 <rf12_xfer>
    798a:	80 e0       	ldi	r24, 0x00	; 0
    798c:	98 eb       	ldi	r25, 0xB8	; 184
    798e:	02 c0       	rjmp	.+4      	; 0x7994 <rf12_initialize+0x66>
    7990:	80 e0       	ldi	r24, 0x00	; 0
    7992:	90 e0       	ldi	r25, 0x00	; 0
    7994:	7e de       	rcall	.-772    	; 0x7692 <rf12_xfer>
    7996:	4a 9b       	sbis	0x09, 2	; 9
    7998:	fb cf       	rjmp	.-10     	; 0x7990 <rf12_initialize+0x62>
    799a:	8f 2d       	mov	r24, r15
    799c:	90 e0       	ldi	r25, 0x00	; 0
    799e:	44 e0       	ldi	r20, 0x04	; 4
    79a0:	88 0f       	add	r24, r24
    79a2:	99 1f       	adc	r25, r25
    79a4:	4a 95       	dec	r20
    79a6:	e1 f7       	brne	.-8      	; 0x79a0 <rf12_initialize+0x72>
    79a8:	87 6c       	ori	r24, 0xC7	; 199
    79aa:	90 68       	ori	r25, 0x80	; 128
    79ac:	72 de       	rcall	.-796    	; 0x7692 <rf12_xfer>
    79ae:	80 e4       	ldi	r24, 0x40	; 64
    79b0:	96 ea       	ldi	r25, 0xA6	; 166
    79b2:	6f de       	rcall	.-802    	; 0x7692 <rf12_xfer>
    79b4:	86 e0       	ldi	r24, 0x06	; 6
    79b6:	96 ec       	ldi	r25, 0xC6	; 198
    79b8:	6c de       	rcall	.-808    	; 0x7692 <rf12_xfer>
    79ba:	82 eb       	ldi	r24, 0xB2	; 178
    79bc:	94 e9       	ldi	r25, 0x94	; 148
    79be:	69 de       	rcall	.-814    	; 0x7692 <rf12_xfer>
    79c0:	8c ea       	ldi	r24, 0xAC	; 172
    79c2:	92 ec       	ldi	r25, 0xC2	; 194
    79c4:	66 de       	rcall	.-820    	; 0x7692 <rf12_xfer>
    79c6:	00 23       	and	r16, r16
    79c8:	39 f0       	breq	.+14     	; 0x79d8 <rf12_initialize+0xaa>
    79ca:	83 e8       	ldi	r24, 0x83	; 131
    79cc:	9a ec       	ldi	r25, 0xCA	; 202
    79ce:	61 de       	rcall	.-830    	; 0x7692 <rf12_xfer>
    79d0:	80 2f       	mov	r24, r16
    79d2:	90 e0       	ldi	r25, 0x00	; 0
    79d4:	9e 6c       	ori	r25, 0xCE	; 206
    79d6:	05 c0       	rjmp	.+10     	; 0x79e2 <rf12_initialize+0xb4>
    79d8:	8b e8       	ldi	r24, 0x8B	; 139
    79da:	9a ec       	ldi	r25, 0xCA	; 202
    79dc:	5a de       	rcall	.-844    	; 0x7692 <rf12_xfer>
    79de:	8d e2       	ldi	r24, 0x2D	; 45
    79e0:	9e ec       	ldi	r25, 0xCE	; 206
    79e2:	57 de       	rcall	.-850    	; 0x7692 <rf12_xfer>
    79e4:	83 e8       	ldi	r24, 0x83	; 131
    79e6:	94 ec       	ldi	r25, 0xC4	; 196
    79e8:	54 de       	rcall	.-856    	; 0x7692 <rf12_xfer>
    79ea:	87 e5       	ldi	r24, 0x57	; 87
    79ec:	98 e9       	ldi	r25, 0x98	; 152
    79ee:	51 de       	rcall	.-862    	; 0x7692 <rf12_xfer>
    79f0:	87 e7       	ldi	r24, 0x77	; 119
    79f2:	9c ec       	ldi	r25, 0xCC	; 204
    79f4:	4e de       	rcall	.-868    	; 0x7692 <rf12_xfer>
    79f6:	80 e0       	ldi	r24, 0x00	; 0
    79f8:	90 ee       	ldi	r25, 0xE0	; 224
    79fa:	4b de       	rcall	.-874    	; 0x7692 <rf12_xfer>
    79fc:	80 e0       	ldi	r24, 0x00	; 0
    79fe:	98 ec       	ldi	r25, 0xC8	; 200
    7a00:	48 de       	rcall	.-880    	; 0x7692 <rf12_xfer>
    7a02:	89 e4       	ldi	r24, 0x49	; 73
    7a04:	90 ec       	ldi	r25, 0xC0	; 192
    7a06:	45 de       	rcall	.-886    	; 0x7692 <rf12_xfer>
    7a08:	84 e0       	ldi	r24, 0x04	; 4
    7a0a:	80 93 a7 01 	sts	0x01A7, r24
    7a0e:	1f 91       	pop	r17
    7a10:	0f 91       	pop	r16
    7a12:	ff 90       	pop	r15
    7a14:	08 95       	ret

00007a16 <rf12_sendWait>:
    7a16:	01 c0       	rjmp	.+2      	; 0x7a1a <rf12_sendWait+0x4>
    7a18:	54 de       	rcall	.-856    	; 0x76c2 <rf12_recvDone>
    7a1a:	80 91 a7 01 	lds	r24, 0x01A7
    7a1e:	84 30       	cpi	r24, 0x04	; 4
    7a20:	dc f3       	brlt	.-10     	; 0x7a18 <rf12_sendWait+0x2>
    7a22:	08 95       	ret

00007a24 <calcCRC>:
typedef uint16_t word;

#define ARDUINO 1

#define REMOTE_TYPE 0x100
#define PAIRING_GROUP 212
    7a24:	dc 01       	movw	r26, r24
    7a26:	4f ef       	ldi	r20, 0xFF	; 255
    7a28:	5f ef       	ldi	r21, 0xFF	; 255
    7a2a:	20 e0       	ldi	r18, 0x00	; 0
    7a2c:	30 e0       	ldi	r19, 0x00	; 0
    7a2e:	1d c0       	rjmp	.+58     	; 0x7a6a <calcCRC+0x46>
    7a30:	fd 01       	movw	r30, r26
    7a32:	e2 0f       	add	r30, r18
    7a34:	f3 1f       	adc	r31, r19
    7a36:	80 81       	ld	r24, Z

uint32_t hwId [4];  

    7a38:	48 27       	eor	r20, r24
    7a3a:	84 2f       	mov	r24, r20
    7a3c:	82 95       	swap	r24
    7a3e:	84 27       	eor	r24, r20
    7a40:	08 2e       	mov	r0, r24
    7a42:	86 95       	lsr	r24
    7a44:	86 95       	lsr	r24
    7a46:	80 25       	eor	r24, r0
    7a48:	08 2e       	mov	r0, r24
    7a4a:	86 95       	lsr	r24
    7a4c:	80 25       	eor	r24, r0
    7a4e:	87 70       	andi	r24, 0x07	; 7
    7a50:	04 2e       	mov	r0, r20
    7a52:	45 2f       	mov	r20, r21
    7a54:	86 95       	lsr	r24
    7a56:	07 94       	ror	r0
    7a58:	87 95       	ror	r24
    7a5a:	50 2d       	mov	r21, r0
    7a5c:	48 27       	eor	r20, r24
    7a5e:	06 94       	lsr	r0
    7a60:	87 95       	ror	r24
    7a62:	50 25       	eor	r21, r0
    7a64:	48 27       	eor	r20, r24
#define ARDUINO 1

#define REMOTE_TYPE 0x100
#define PAIRING_GROUP 212

uint32_t hwId [4];  
    7a66:	2f 5f       	subi	r18, 0xFF	; 255
    7a68:	3f 4f       	sbci	r19, 0xFF	; 255
    7a6a:	26 17       	cp	r18, r22
    7a6c:	37 07       	cpc	r19, r23
    7a6e:	00 f3       	brcs	.-64     	; 0x7a30 <calcCRC+0xc>

static uint32_t millis () {
  return 0; // FIXME not correct
}
    7a70:	ca 01       	movw	r24, r20
    7a72:	08 95       	ret

00007a74 <copyPageToFlash>:
  // switch to 4 MHz, the minimum rate needed to use the RFM12B
  clock_prescale_set(clock_div_4);

  flash_led(4); // 2 flashes
	P("\n\nBOOT!\n");
	P("SP="); P_X16(SP); P_LN();
    7a74:	08 95       	ret

00007a76 <saveConfig>:
    7a76:	81 e0       	ldi	r24, 0x01	; 1
    7a78:	90 e0       	ldi	r25, 0x00	; 0
    7a7a:	a0 e0       	ldi	r26, 0x00	; 0
    7a7c:	b0 e0       	ldi	r27, 0x00	; 0
    7a7e:	80 93 02 02 	sts	0x0202, r24
    7a82:	90 93 03 02 	sts	0x0203, r25
    7a86:	a0 93 04 02 	sts	0x0204, r26
    7a8a:	b0 93 05 02 	sts	0x0205, r27
    7a8e:	82 e0       	ldi	r24, 0x02	; 2
    7a90:	92 e0       	ldi	r25, 0x02	; 2
    7a92:	60 e2       	ldi	r22, 0x20	; 32
    7a94:	70 e0       	ldi	r23, 0x00	; 0
    7a96:	c6 df       	rcall	.-116    	; 0x7a24 <calcCRC>
    7a98:	89 2b       	or	r24, r25
    7a9a:	49 f0       	breq	.+18     	; 0x7aae <saveConfig+0x38>
    7a9c:	82 e0       	ldi	r24, 0x02	; 2
    7a9e:	92 e0       	ldi	r25, 0x02	; 2
    7aa0:	6e e1       	ldi	r22, 0x1E	; 30
    7aa2:	70 e0       	ldi	r23, 0x00	; 0
    7aa4:	bf df       	rcall	.-130    	; 0x7a24 <calcCRC>
    7aa6:	90 93 21 02 	sts	0x0221, r25
    7aaa:	80 93 20 02 	sts	0x0220, r24
    7aae:	08 95       	ret

00007ab0 <exponentialBackOff>:
    7ab0:	80 91 a8 01 	lds	r24, 0x01A8
    7ab4:	80 31       	cpi	r24, 0x10	; 16
    7ab6:	18 f4       	brcc	.+6      	; 0x7abe <exponentialBackOff+0xe>
    7ab8:	8f 5f       	subi	r24, 0xFF	; 255
    7aba:	80 93 a8 01 	sts	0x01A8, r24
    7abe:	08 95       	ret

00007ac0 <appIsValid>:
    7ac0:	60 91 1c 02 	lds	r22, 0x021C
    7ac4:	70 91 1d 02 	lds	r23, 0x021D
    7ac8:	54 e0       	ldi	r21, 0x04	; 4
    7aca:	66 0f       	add	r22, r22
    7acc:	77 1f       	adc	r23, r23
    7ace:	5a 95       	dec	r21
    7ad0:	e1 f7       	brne	.-8      	; 0x7aca <appIsValid+0xa>
    7ad2:	80 e0       	ldi	r24, 0x00	; 0
    7ad4:	90 e1       	ldi	r25, 0x10	; 16
    7ad6:	a6 df       	rcall	.-180    	; 0x7a24 <calcCRC>
    7ad8:	40 e0       	ldi	r20, 0x00	; 0
    7ada:	50 e0       	ldi	r21, 0x00	; 0
    7adc:	20 91 1e 02 	lds	r18, 0x021E
    7ae0:	30 91 1f 02 	lds	r19, 0x021F
    7ae4:	82 17       	cp	r24, r18
    7ae6:	93 07       	cpc	r25, r19
    7ae8:	11 f4       	brne	.+4      	; 0x7aee <appIsValid+0x2e>
    7aea:	41 e0       	ldi	r20, 0x01	; 1
    7aec:	50 e0       	ldi	r21, 0x00	; 0
    7aee:	ca 01       	movw	r24, r20
    7af0:	08 95       	ret

00007af2 <rf12_sendNow>:
    7af2:	0f 93       	push	r16
    7af4:	1f 93       	push	r17
    7af6:	cf 93       	push	r28
    7af8:	df 93       	push	r29
    7afa:	18 2f       	mov	r17, r24
    7afc:	eb 01       	movw	r28, r22
    7afe:	04 2f       	mov	r16, r20
    7b00:	80 91 a7 01 	lds	r24, 0x01A7
    7b04:	85 30       	cpi	r24, 0x05	; 5
    7b06:	e1 f4       	brne	.+56     	; 0x7b40 <rf12_sendNow+0x4e>
    7b08:	80 91 a6 01 	lds	r24, 0x01A6
    7b0c:	88 23       	and	r24, r24
    7b0e:	c1 f4       	brne	.+48     	; 0x7b40 <rf12_sendNow+0x4e>
    7b10:	ba dd       	rcall	.-1164   	; 0x7686 <rf12_byte>
    7b12:	80 fd       	sbrc	r24, 0
    7b14:	15 c0       	rjmp	.+42     	; 0x7b40 <rf12_sendNow+0x4e>
    7b16:	8d e0       	ldi	r24, 0x0D	; 13
    7b18:	92 e8       	ldi	r25, 0x82	; 130
    7b1a:	bb dd       	rcall	.-1162   	; 0x7692 <rf12_xfer>
    7b1c:	84 e0       	ldi	r24, 0x04	; 4
    7b1e:	80 93 a7 01 	sts	0x01A7, r24
    7b22:	80 91 a5 01 	lds	r24, 0x01A5
    7b26:	80 93 b9 01 	sts	0x01B9, r24
    7b2a:	00 93 bb 01 	sts	0x01BB, r16
    7b2e:	40 2f       	mov	r20, r16
    7b30:	50 e0       	ldi	r21, 0x00	; 0
    7b32:	8c eb       	ldi	r24, 0xBC	; 188
    7b34:	91 e0       	ldi	r25, 0x01	; 1
    7b36:	be 01       	movw	r22, r28
    7b38:	92 d0       	rcall	.+292    	; 0x7c5e <memcpy>
    7b3a:	16 ff       	sbrs	r17, 6
    7b3c:	03 c0       	rjmp	.+6      	; 0x7b44 <rf12_sendNow+0x52>
    7b3e:	07 c0       	rjmp	.+14     	; 0x7b4e <rf12_sendNow+0x5c>
    7b40:	c0 dd       	rcall	.-1152   	; 0x76c2 <rf12_recvDone>
    7b42:	de cf       	rjmp	.-68     	; 0x7b00 <rf12_sendNow+0xe>
    7b44:	10 7e       	andi	r17, 0xE0	; 224
    7b46:	80 91 a4 01 	lds	r24, 0x01A4
    7b4a:	8f 71       	andi	r24, 0x1F	; 31
    7b4c:	18 0f       	add	r17, r24
    7b4e:	10 93 ba 01 	sts	0x01BA, r17
    7b52:	8f ef       	ldi	r24, 0xFF	; 255
    7b54:	9f ef       	ldi	r25, 0xFF	; 255
    7b56:	90 93 01 02 	sts	0x0201, r25
    7b5a:	80 93 00 02 	sts	0x0200, r24
    7b5e:	80 91 00 02 	lds	r24, 0x0200
    7b62:	90 91 01 02 	lds	r25, 0x0201
    7b66:	20 91 b9 01 	lds	r18, 0x01B9
    7b6a:	82 27       	eor	r24, r18
    7b6c:	28 2f       	mov	r18, r24
    7b6e:	22 95       	swap	r18
    7b70:	28 27       	eor	r18, r24
    7b72:	02 2e       	mov	r0, r18
    7b74:	26 95       	lsr	r18
    7b76:	26 95       	lsr	r18
    7b78:	20 25       	eor	r18, r0
    7b7a:	02 2e       	mov	r0, r18
    7b7c:	26 95       	lsr	r18
    7b7e:	20 25       	eor	r18, r0
    7b80:	27 70       	andi	r18, 0x07	; 7
    7b82:	08 2e       	mov	r0, r24
    7b84:	89 2f       	mov	r24, r25
    7b86:	26 95       	lsr	r18
    7b88:	07 94       	ror	r0
    7b8a:	27 95       	ror	r18
    7b8c:	90 2d       	mov	r25, r0
    7b8e:	82 27       	eor	r24, r18
    7b90:	06 94       	lsr	r0
    7b92:	27 95       	ror	r18
    7b94:	90 25       	eor	r25, r0
    7b96:	82 27       	eor	r24, r18
    7b98:	90 93 01 02 	sts	0x0201, r25
    7b9c:	80 93 00 02 	sts	0x0200, r24
    7ba0:	86 e0       	ldi	r24, 0x06	; 6
    7ba2:	80 93 a7 01 	sts	0x01A7, r24
    7ba6:	8d e3       	ldi	r24, 0x3D	; 61
    7ba8:	92 e8       	ldi	r25, 0x82	; 130
    7baa:	73 dd       	rcall	.-1306   	; 0x7692 <rf12_xfer>
    7bac:	df 91       	pop	r29
    7bae:	cf 91       	pop	r28
    7bb0:	1f 91       	pop	r17
    7bb2:	0f 91       	pop	r16
    7bb4:	08 95       	ret

00007bb6 <sendRequest>:
/* generate any entry or exit code itself. */
int main(void) __attribute__ ((naked)) __attribute__ ((section (".init9")));

int main () {
  // cli();
  asm volatile ("clr __zero_reg__");
    7bb6:	cf 92       	push	r12
    7bb8:	df 92       	push	r13
    7bba:	ef 92       	push	r14
    7bbc:	ff 92       	push	r15
    7bbe:	0f 93       	push	r16
    7bc0:	1f 93       	push	r17
    7bc2:	8c 01       	movw	r16, r24
    7bc4:	7b 01       	movw	r14, r22
    7bc6:	6a 01       	movw	r12, r20
  //SP=RAMEND;  // This is done by hardware reset

    7bc8:	84 e1       	ldi	r24, 0x14	; 20
    7bca:	91 e0       	ldi	r25, 0x01	; 1
    7bcc:	1a dd       	rcall	.-1484   	; 0x7602 <P>
    7bce:	8e 2d       	mov	r24, r14
    7bd0:	24 dd       	rcall	.-1464   	; 0x761a <P_X8>
    7bd2:	8a e1       	ldi	r24, 0x1A	; 26
    7bd4:	91 e0       	ldi	r25, 0x01	; 1
    7bd6:	15 dd       	rcall	.-1494   	; 0x7602 <P>
  // find out whether we got here through a watchdog reset
    7bd8:	8c 2d       	mov	r24, r12
    7bda:	80 6a       	ori	r24, 0xA0	; 160
    7bdc:	b8 01       	movw	r22, r16
    7bde:	4e 2d       	mov	r20, r14
    7be0:	88 df       	rcall	.-240    	; 0x7af2 <rf12_sendNow>
  byte launch = bitRead(MCUSR, EXTRF);
    7be2:	80 e0       	ldi	r24, 0x00	; 0
    7be4:	18 df       	rcall	.-464    	; 0x7a16 <rf12_sendWait>
  MCUSR = 0;
  wdt_disable();
    7be6:	6d dd       	rcall	.-1318   	; 0x76c2 <rf12_recvDone>
    7be8:	88 23       	and	r24, r24
    7bea:	e9 f3       	breq	.-6      	; 0x7be6 <sendRequest+0x30>
    7bec:	80 91 bb 01 	lds	r24, 0x01BB
    7bf0:	88 23       	and	r24, r24
    7bf2:	c9 f3       	breq	.-14     	; 0x7be6 <sendRequest+0x30>

#if DEBUG == 2
  // init UART
  UART_SRA = _BV(U2X0); //Double speed mode USART0
  UART_SRB = _BV(RXEN0) | _BV(TXEN0);
    7bf4:	80 91 00 02 	lds	r24, 0x0200
    7bf8:	90 91 01 02 	lds	r25, 0x0201
    7bfc:	89 2b       	or	r24, r25
    7bfe:	69 f0       	breq	.+26     	; 0x7c1a <sendRequest+0x64>
  UART_SRC = _BV(UCSZ00) | _BV(UCSZ01);
    7c00:	8f e1       	ldi	r24, 0x1F	; 31
    7c02:	91 e0       	ldi	r25, 0x01	; 1
    7c04:	fe dc       	rcall	.-1540   	; 0x7602 <P>
    7c06:	80 91 00 02 	lds	r24, 0x0200
    7c0a:	90 91 01 02 	lds	r25, 0x0201
    7c0e:	19 dd       	rcall	.-1486   	; 0x7642 <P_X16>
  // cli();
  asm volatile ("clr __zero_reg__");
  //SP=RAMEND;  // This is done by hardware reset

  // find out whether we got here through a watchdog reset
  byte launch = bitRead(MCUSR, EXTRF);
    7c10:	8a e0       	ldi	r24, 0x0A	; 10
    7c12:	ef dc       	rcall	.-1570   	; 0x75f2 <putch>
    7c14:	80 e0       	ldi	r24, 0x00	; 0
    7c16:	90 e0       	ldi	r25, 0x00	; 0
    7c18:	10 c0       	rjmp	.+32     	; 0x7c3a <sendRequest+0x84>
  UART_SRA = _BV(U2X0); //Double speed mode USART0
  UART_SRB = _BV(RXEN0) | _BV(TXEN0);
  UART_SRC = _BV(UCSZ00) | _BV(UCSZ01);
  UART_SRL = (uint8_t)( (4000000L + BAUD_RATE * 4L) / (BAUD_RATE * 8L) - 1 );
#endif
#if DEBUG == 1
    7c1a:	88 e2       	ldi	r24, 0x28	; 40
    7c1c:	91 e0       	ldi	r25, 0x01	; 1
    7c1e:	f1 dc       	rcall	.-1566   	; 0x7602 <P>
    7c20:	80 91 bb 01 	lds	r24, 0x01BB
    7c24:	fa dc       	rcall	.-1548   	; 0x761a <P_X8>
    7c26:	8d e2       	ldi	r24, 0x2D	; 45
    7c28:	91 e0       	ldi	r25, 0x01	; 1
    7c2a:	eb dc       	rcall	.-1578   	; 0x7602 <P>
    7c2c:	80 91 ba 01 	lds	r24, 0x01BA
    7c30:	f4 dc       	rcall	.-1560   	; 0x761a <P_X8>
  // cli();
  asm volatile ("clr __zero_reg__");
  //SP=RAMEND;  // This is done by hardware reset

  // find out whether we got here through a watchdog reset
  byte launch = bitRead(MCUSR, EXTRF);
    7c32:	8a e0       	ldi	r24, 0x0A	; 10
    7c34:	de dc       	rcall	.-1604   	; 0x75f2 <putch>
    7c36:	81 e0       	ldi	r24, 0x01	; 1
    7c38:	90 e0       	ldi	r25, 0x00	; 0
  UART_SRL = (uint8_t)( (4000000L + BAUD_RATE * 4L) / (BAUD_RATE * 8L) - 1 );
#endif
#if DEBUG == 1
  // Set up Timer 1 for timeout counter
  TCCR1B = _BV(CS12) | _BV(CS10); // div 1024
  // Set LED pin as output
    7c3a:	1f 91       	pop	r17
    7c3c:	0f 91       	pop	r16
    7c3e:	ff 90       	pop	r15
    7c40:	ef 90       	pop	r14
    7c42:	df 90       	pop	r13
    7c44:	cf 90       	pop	r12
    7c46:	08 95       	ret

00007c48 <strchr_P>:
    7c48:	fc 01       	movw	r30, r24
    7c4a:	05 90       	lpm	r0, Z+
    7c4c:	06 16       	cp	r0, r22
    7c4e:	21 f0       	breq	.+8      	; 0x7c58 <strchr_P+0x10>
    7c50:	00 20       	and	r0, r0
    7c52:	d9 f7       	brne	.-10     	; 0x7c4a <strchr_P+0x2>
    7c54:	c0 01       	movw	r24, r0
    7c56:	08 95       	ret
    7c58:	31 97       	sbiw	r30, 0x01	; 1
    7c5a:	cf 01       	movw	r24, r30
    7c5c:	08 95       	ret

00007c5e <memcpy>:
    7c5e:	fb 01       	movw	r30, r22
    7c60:	dc 01       	movw	r26, r24
    7c62:	02 c0       	rjmp	.+4      	; 0x7c68 <memcpy+0xa>
    7c64:	01 90       	ld	r0, Z+
    7c66:	0d 92       	st	X+, r0
    7c68:	41 50       	subi	r20, 0x01	; 1
    7c6a:	50 40       	sbci	r21, 0x00	; 0
    7c6c:	d8 f7       	brcc	.-10     	; 0x7c64 <memcpy+0x6>
    7c6e:	08 95       	ret

00007c70 <fputc>:
    7c70:	0f 93       	push	r16
    7c72:	1f 93       	push	r17
    7c74:	cf 93       	push	r28
    7c76:	df 93       	push	r29
    7c78:	8c 01       	movw	r16, r24
    7c7a:	eb 01       	movw	r28, r22
    7c7c:	8b 81       	ldd	r24, Y+3	; 0x03
    7c7e:	81 ff       	sbrs	r24, 1
    7c80:	1b c0       	rjmp	.+54     	; 0x7cb8 <fputc+0x48>
    7c82:	82 ff       	sbrs	r24, 2
    7c84:	0d c0       	rjmp	.+26     	; 0x7ca0 <fputc+0x30>
    7c86:	2e 81       	ldd	r18, Y+6	; 0x06
    7c88:	3f 81       	ldd	r19, Y+7	; 0x07
    7c8a:	8c 81       	ldd	r24, Y+4	; 0x04
    7c8c:	9d 81       	ldd	r25, Y+5	; 0x05
    7c8e:	28 17       	cp	r18, r24
    7c90:	39 07       	cpc	r19, r25
    7c92:	64 f4       	brge	.+24     	; 0x7cac <fputc+0x3c>
    7c94:	e8 81       	ld	r30, Y
    7c96:	f9 81       	ldd	r31, Y+1	; 0x01
    7c98:	01 93       	st	Z+, r16
    7c9a:	f9 83       	std	Y+1, r31	; 0x01
    7c9c:	e8 83       	st	Y, r30
    7c9e:	06 c0       	rjmp	.+12     	; 0x7cac <fputc+0x3c>
    7ca0:	e8 85       	ldd	r30, Y+8	; 0x08
    7ca2:	f9 85       	ldd	r31, Y+9	; 0x09
    7ca4:	80 2f       	mov	r24, r16
    7ca6:	09 95       	icall
    7ca8:	89 2b       	or	r24, r25
    7caa:	31 f4       	brne	.+12     	; 0x7cb8 <fputc+0x48>
    7cac:	8e 81       	ldd	r24, Y+6	; 0x06
    7cae:	9f 81       	ldd	r25, Y+7	; 0x07
    7cb0:	01 96       	adiw	r24, 0x01	; 1
    7cb2:	9f 83       	std	Y+7, r25	; 0x07
    7cb4:	8e 83       	std	Y+6, r24	; 0x06
    7cb6:	02 c0       	rjmp	.+4      	; 0x7cbc <fputc+0x4c>
    7cb8:	0f ef       	ldi	r16, 0xFF	; 255
    7cba:	1f ef       	ldi	r17, 0xFF	; 255
    7cbc:	c8 01       	movw	r24, r16
    7cbe:	df 91       	pop	r29
    7cc0:	cf 91       	pop	r28
    7cc2:	1f 91       	pop	r17
    7cc4:	0f 91       	pop	r16
    7cc6:	08 95       	ret

00007cc8 <__ultoa_invert>:
    7cc8:	fa 01       	movw	r30, r20
    7cca:	aa 27       	eor	r26, r26
    7ccc:	28 30       	cpi	r18, 0x08	; 8
    7cce:	51 f1       	breq	.+84     	; 0x7d24 <__ultoa_invert+0x5c>
    7cd0:	20 31       	cpi	r18, 0x10	; 16
    7cd2:	81 f1       	breq	.+96     	; 0x7d34 <__ultoa_invert+0x6c>
    7cd4:	e8 94       	clt
    7cd6:	6f 93       	push	r22
    7cd8:	6e 7f       	andi	r22, 0xFE	; 254
    7cda:	6e 5f       	subi	r22, 0xFE	; 254
    7cdc:	7f 4f       	sbci	r23, 0xFF	; 255
    7cde:	8f 4f       	sbci	r24, 0xFF	; 255
    7ce0:	9f 4f       	sbci	r25, 0xFF	; 255
    7ce2:	af 4f       	sbci	r26, 0xFF	; 255
    7ce4:	b1 e0       	ldi	r27, 0x01	; 1
    7ce6:	3e d0       	rcall	.+124    	; 0x7d64 <__ultoa_invert+0x9c>
    7ce8:	b4 e0       	ldi	r27, 0x04	; 4
    7cea:	3c d0       	rcall	.+120    	; 0x7d64 <__ultoa_invert+0x9c>
    7cec:	67 0f       	add	r22, r23
    7cee:	78 1f       	adc	r23, r24
    7cf0:	89 1f       	adc	r24, r25
    7cf2:	9a 1f       	adc	r25, r26
    7cf4:	a1 1d       	adc	r26, r1
    7cf6:	68 0f       	add	r22, r24
    7cf8:	79 1f       	adc	r23, r25
    7cfa:	8a 1f       	adc	r24, r26
    7cfc:	91 1d       	adc	r25, r1
    7cfe:	a1 1d       	adc	r26, r1
    7d00:	6a 0f       	add	r22, r26
    7d02:	71 1d       	adc	r23, r1
    7d04:	81 1d       	adc	r24, r1
    7d06:	91 1d       	adc	r25, r1
    7d08:	a1 1d       	adc	r26, r1
    7d0a:	20 d0       	rcall	.+64     	; 0x7d4c <__ultoa_invert+0x84>
    7d0c:	09 f4       	brne	.+2      	; 0x7d10 <__ultoa_invert+0x48>
    7d0e:	68 94       	set
    7d10:	3f 91       	pop	r19
    7d12:	2a e0       	ldi	r18, 0x0A	; 10
    7d14:	26 9f       	mul	r18, r22
    7d16:	11 24       	eor	r1, r1
    7d18:	30 19       	sub	r19, r0
    7d1a:	30 5d       	subi	r19, 0xD0	; 208
    7d1c:	31 93       	st	Z+, r19
    7d1e:	de f6       	brtc	.-74     	; 0x7cd6 <__ultoa_invert+0xe>
    7d20:	cf 01       	movw	r24, r30
    7d22:	08 95       	ret
    7d24:	46 2f       	mov	r20, r22
    7d26:	47 70       	andi	r20, 0x07	; 7
    7d28:	40 5d       	subi	r20, 0xD0	; 208
    7d2a:	41 93       	st	Z+, r20
    7d2c:	b3 e0       	ldi	r27, 0x03	; 3
    7d2e:	0f d0       	rcall	.+30     	; 0x7d4e <__ultoa_invert+0x86>
    7d30:	c9 f7       	brne	.-14     	; 0x7d24 <__ultoa_invert+0x5c>
    7d32:	f6 cf       	rjmp	.-20     	; 0x7d20 <__ultoa_invert+0x58>
    7d34:	46 2f       	mov	r20, r22
    7d36:	4f 70       	andi	r20, 0x0F	; 15
    7d38:	40 5d       	subi	r20, 0xD0	; 208
    7d3a:	4a 33       	cpi	r20, 0x3A	; 58
    7d3c:	18 f0       	brcs	.+6      	; 0x7d44 <__ultoa_invert+0x7c>
    7d3e:	49 5d       	subi	r20, 0xD9	; 217
    7d40:	31 fd       	sbrc	r19, 1
    7d42:	40 52       	subi	r20, 0x20	; 32
    7d44:	41 93       	st	Z+, r20
    7d46:	02 d0       	rcall	.+4      	; 0x7d4c <__ultoa_invert+0x84>
    7d48:	a9 f7       	brne	.-22     	; 0x7d34 <__ultoa_invert+0x6c>
    7d4a:	ea cf       	rjmp	.-44     	; 0x7d20 <__ultoa_invert+0x58>
    7d4c:	b4 e0       	ldi	r27, 0x04	; 4
    7d4e:	a6 95       	lsr	r26
    7d50:	97 95       	ror	r25
    7d52:	87 95       	ror	r24
    7d54:	77 95       	ror	r23
    7d56:	67 95       	ror	r22
    7d58:	ba 95       	dec	r27
    7d5a:	c9 f7       	brne	.-14     	; 0x7d4e <__ultoa_invert+0x86>
    7d5c:	00 97       	sbiw	r24, 0x00	; 0
    7d5e:	61 05       	cpc	r22, r1
    7d60:	71 05       	cpc	r23, r1
    7d62:	08 95       	ret
    7d64:	9b 01       	movw	r18, r22
    7d66:	ac 01       	movw	r20, r24
    7d68:	0a 2e       	mov	r0, r26
    7d6a:	06 94       	lsr	r0
    7d6c:	57 95       	ror	r21
    7d6e:	47 95       	ror	r20
    7d70:	37 95       	ror	r19
    7d72:	27 95       	ror	r18
    7d74:	ba 95       	dec	r27
    7d76:	c9 f7       	brne	.-14     	; 0x7d6a <__ultoa_invert+0xa2>
    7d78:	62 0f       	add	r22, r18
    7d7a:	73 1f       	adc	r23, r19
    7d7c:	84 1f       	adc	r24, r20
    7d7e:	95 1f       	adc	r25, r21
    7d80:	a0 1d       	adc	r26, r0
    7d82:	08 95       	ret

00007d84 <__prologue_saves__>:
    7d84:	2f 92       	push	r2
    7d86:	3f 92       	push	r3
    7d88:	4f 92       	push	r4
    7d8a:	5f 92       	push	r5
    7d8c:	6f 92       	push	r6
    7d8e:	7f 92       	push	r7
    7d90:	8f 92       	push	r8
    7d92:	9f 92       	push	r9
    7d94:	af 92       	push	r10
    7d96:	bf 92       	push	r11
    7d98:	cf 92       	push	r12
    7d9a:	df 92       	push	r13
    7d9c:	ef 92       	push	r14
    7d9e:	ff 92       	push	r15
    7da0:	0f 93       	push	r16
    7da2:	1f 93       	push	r17
    7da4:	cf 93       	push	r28
    7da6:	df 93       	push	r29
    7da8:	cd b7       	in	r28, 0x3d	; 61
    7daa:	de b7       	in	r29, 0x3e	; 62
    7dac:	ca 1b       	sub	r28, r26
    7dae:	db 0b       	sbc	r29, r27
    7db0:	0f b6       	in	r0, 0x3f	; 63
    7db2:	f8 94       	cli
    7db4:	de bf       	out	0x3e, r29	; 62
    7db6:	0f be       	out	0x3f, r0	; 63
    7db8:	cd bf       	out	0x3d, r28	; 61
    7dba:	09 94       	ijmp

00007dbc <__epilogue_restores__>:
    7dbc:	2a 88       	ldd	r2, Y+18	; 0x12
    7dbe:	39 88       	ldd	r3, Y+17	; 0x11
    7dc0:	48 88       	ldd	r4, Y+16	; 0x10
    7dc2:	5f 84       	ldd	r5, Y+15	; 0x0f
    7dc4:	6e 84       	ldd	r6, Y+14	; 0x0e
    7dc6:	7d 84       	ldd	r7, Y+13	; 0x0d
    7dc8:	8c 84       	ldd	r8, Y+12	; 0x0c
    7dca:	9b 84       	ldd	r9, Y+11	; 0x0b
    7dcc:	aa 84       	ldd	r10, Y+10	; 0x0a
    7dce:	b9 84       	ldd	r11, Y+9	; 0x09
    7dd0:	c8 84       	ldd	r12, Y+8	; 0x08
    7dd2:	df 80       	ldd	r13, Y+7	; 0x07
    7dd4:	ee 80       	ldd	r14, Y+6	; 0x06
    7dd6:	fd 80       	ldd	r15, Y+5	; 0x05
    7dd8:	0c 81       	ldd	r16, Y+4	; 0x04
    7dda:	1b 81       	ldd	r17, Y+3	; 0x03
    7ddc:	aa 81       	ldd	r26, Y+2	; 0x02
    7dde:	b9 81       	ldd	r27, Y+1	; 0x01
    7de0:	ce 0f       	add	r28, r30
    7de2:	d1 1d       	adc	r29, r1
    7de4:	0f b6       	in	r0, 0x3f	; 63
    7de6:	f8 94       	cli
    7de8:	de bf       	out	0x3e, r29	; 62
    7dea:	0f be       	out	0x3f, r0	; 63
    7dec:	cd bf       	out	0x3d, r28	; 61
    7dee:	ed 01       	movw	r28, r26
    7df0:	08 95       	ret
